{"ast":null,"code":"import Vue from 'vue';\nimport { filterObjectOnKeys } from '../../util/helpers';\nvar availableProps = {\n  absolute: Boolean,\n  bottom: Boolean,\n  fixed: Boolean,\n  left: Boolean,\n  right: Boolean,\n  top: Boolean\n};\nexport function factory() {\n  var selected = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return Vue.extend({\n    name: 'positionable',\n    props: selected.length ? filterObjectOnKeys(availableProps, selected) : availableProps\n  });\n}\nexport default factory(); // Add a `*` before the second `/`\n\n/* Tests /\nlet single = factory(['top']).extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n  }\n})\n\nlet some = factory(['top', 'bottom']).extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n  }\n})\n\nlet all = factory().extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n    this.foobar\n  }\n})\n/**/","map":{"version":3,"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AAGA,IAAMC,cAAc,GAAG;AACrBC,UAAQ,EAAEC,OADW;AAErBC,QAAM,EAAED,OAFa;AAGrBE,OAAK,EAAEF,OAHc;AAIrBG,MAAI,EAAEH,OAJe;AAKrBI,OAAK,EAAEJ,OALc;AAMrBK,KAAG,EAAEL;AANgB,CAAvB;AAcA,OAAM,SAAUM,OAAV,GAAuC;AAAA,MAApBC,QAAoB,uEAAF,EAAE;AAC3C,SAAOX,GAAG,CAACY,MAAJ,CAAW;AAChBC,QAAI,EAAE,cADU;AAEhBC,SAAK,EAAEH,QAAQ,CAACI,MAAT,GAAkBd,kBAAkB,CAACC,cAAD,EAAiBS,QAAjB,CAApC,GAAiET;AAFxD,GAAX,CAAP;AAID;AAED,eAAeQ,OAAO,EAAtB,C,CAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBI","names":["Vue","filterObjectOnKeys","availableProps","absolute","Boolean","bottom","fixed","left","right","top","factory","selected","extend","name","props","length"],"sourceRoot":"","sources":["../../../src/mixins/positionable/index.ts"],"sourcesContent":["import Vue from 'vue'\nimport { filterObjectOnKeys } from '../../util/helpers'\nimport { OptionsVue, VueConstructor } from 'vue/types/vue'\n\nconst availableProps = {\n  absolute: Boolean,\n  bottom: Boolean,\n  fixed: Boolean,\n  left: Boolean,\n  right: Boolean,\n  top: Boolean,\n}\ntype props = Record<keyof typeof availableProps, boolean>\n\nexport type Positionable<S extends keyof props> = VueConstructor<Vue & { [P in S]: boolean }, { [P in S]: BooleanConstructor }>\n\nexport function factory <S extends keyof props> (selected?: S[]): Positionable<S>\nexport function factory (selected: undefined): OptionsVue<Vue, {}, {}, {}, props, typeof availableProps>\nexport function factory (selected: any[] = []): any {\n  return Vue.extend({\n    name: 'positionable',\n    props: selected.length ? filterObjectOnKeys(availableProps, selected) : availableProps,\n  })\n}\n\nexport default factory()\n\n// Add a `*` before the second `/`\n/* Tests /\nlet single = factory(['top']).extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n  }\n})\n\nlet some = factory(['top', 'bottom']).extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n  }\n})\n\nlet all = factory().extend({\n  created () {\n    this.top\n    this.bottom\n    this.absolute\n    this.foobar\n  }\n})\n/**/\n"]},"metadata":{},"sourceType":"module"}