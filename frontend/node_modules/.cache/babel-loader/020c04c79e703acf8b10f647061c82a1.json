{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Styles\nimport \"../../../src/components/VList/VListItem.sass\"; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport Routable from '../../mixins/routable';\nimport { factory as GroupableFactory } from '../../mixins/groupable';\nimport Themeable from '../../mixins/themeable';\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'; // Directives\n\nimport Ripple from '../../directives/ripple'; // Utilities\n\nimport { keyCodes } from './../../util/helpers';\nimport { removed } from '../../util/console'; // Types\n\nimport mixins from '../../util/mixins';\nvar baseMixins = mixins(Colorable, Routable, Themeable, GroupableFactory('listItemGroup'), ToggleableFactory('inputValue'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-list-item',\n  directives: {\n    Ripple: Ripple\n  },\n  inject: {\n    isInGroup: {\n      \"default\": false\n    },\n    isInList: {\n      \"default\": false\n    },\n    isInMenu: {\n      \"default\": false\n    },\n    isInNav: {\n      \"default\": false\n    }\n  },\n  inheritAttrs: false,\n  props: {\n    activeClass: {\n      type: String,\n      \"default\": function _default() {\n        if (!this.listItemGroup) return '';\n        return this.listItemGroup.activeClass;\n      }\n    },\n    dense: Boolean,\n    inactive: Boolean,\n    link: Boolean,\n    selectable: {\n      type: Boolean\n    },\n    tag: {\n      type: String,\n      \"default\": 'div'\n    },\n    threeLine: Boolean,\n    twoLine: Boolean,\n    value: null\n  },\n  data: function data() {\n    return {\n      proxyClass: 'v-list-item--active'\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({\n        'v-list-item': true\n      }, Routable.options.computed.classes.call(this)), {}, {\n        'v-list-item--dense': this.dense,\n        'v-list-item--disabled': this.disabled,\n        'v-list-item--link': this.isClickable && !this.inactive,\n        'v-list-item--selectable': this.selectable,\n        'v-list-item--three-line': this.threeLine,\n        'v-list-item--two-line': this.twoLine\n      }, this.themeClasses);\n    },\n    isClickable: function isClickable() {\n      return Boolean(Routable.options.computed.isClickable.call(this) || this.listItemGroup);\n    }\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('avatar')) {\n      removed('avatar', this);\n    }\n  },\n  methods: {\n    click: function click(e) {\n      if (e.detail) this.$el.blur();\n      this.$emit('click', e);\n      this.to || this.toggle();\n    },\n    genAttrs: function genAttrs() {\n      var attrs = _objectSpread({\n        'aria-disabled': this.disabled ? true : undefined,\n        tabindex: this.isClickable && !this.disabled ? 0 : -1\n      }, this.$attrs);\n\n      if (this.$attrs.hasOwnProperty('role')) {// do nothing, role already provided\n      } else if (this.isInNav) {// do nothing, role is inherit\n      } else if (this.isInGroup) {\n        attrs.role = 'option';\n        attrs['aria-selected'] = String(this.isActive);\n      } else if (this.isInMenu) {\n        attrs.role = this.isClickable ? 'menuitem' : undefined;\n        attrs.id = attrs.id || \"list-item-\".concat(this._uid);\n      } else if (this.isInList) {\n        attrs.role = 'listitem';\n      }\n\n      return attrs;\n    },\n    toggle: function toggle() {\n      if (this.to && this.inputValue === undefined) {\n        this.isActive = !this.isActive;\n      }\n\n      this.$emit('change');\n    }\n  },\n  render: function render(h) {\n    var _this = this;\n\n    var _this$generateRouteLi = this.generateRouteLink(),\n        tag = _this$generateRouteLi.tag,\n        data = _this$generateRouteLi.data;\n\n    data.attrs = _objectSpread(_objectSpread({}, data.attrs), this.genAttrs());\n    data[this.to ? 'nativeOn' : 'on'] = _objectSpread(_objectSpread({}, data[this.to ? 'nativeOn' : 'on']), {}, {\n      keydown: function keydown(e) {\n        /* istanbul ignore else */\n        if (e.keyCode === keyCodes.enter) _this.click(e);\n\n        _this.$emit('keydown', e);\n      }\n    });\n    if (this.inactive) tag = 'div';\n\n    if (this.inactive && this.to) {\n      data.on = data.nativeOn;\n      delete data.nativeOn;\n    }\n\n    var children = this.$scopedSlots[\"default\"] ? this.$scopedSlots[\"default\"]({\n      active: this.isActive,\n      toggle: this.toggle\n    }) : this.$slots[\"default\"];\n    return h(tag, this.isActive ? this.setTextColor(this.color, data) : data, children);\n  }\n});","map":{"version":3,"mappings":"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","names":["Colorable","Routable","factory","GroupableFactory","Themeable","ToggleableFactory","Ripple","keyCodes","removed","mixins","baseMixins","extend","name","directives","inject","isInGroup","isInList","isInMenu","isInNav","inheritAttrs","props","activeClass","type","String","listItemGroup","dense","Boolean","inactive","link","selectable","tag","threeLine","twoLine","value","data","proxyClass","computed","classes","options","call","disabled","isClickable","themeClasses","created","$attrs","hasOwnProperty","methods","click","e","detail","$el","blur","$emit","to","toggle","genAttrs","attrs","undefined","tabindex","role","isActive","id","_uid","inputValue","render","h","generateRouteLink","keydown","keyCode","enter","on","nativeOn","children","$scopedSlots","active","$slots","setTextColor","color"],"sourceRoot":"","sources":["../../../src/components/VList/VListItem.ts"],"sourcesContent":["// Styles\nimport './VListItem.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Routable from '../../mixins/routable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\n\n// Directives\nimport Ripple from '../../directives/ripple'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport { ExtractVue } from './../../util/mixins'\nimport { removed } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { PropType, PropValidator } from 'vue/types/options'\n\nconst baseMixins = mixins(\n  Colorable,\n  Routable,\n  Themeable,\n  GroupableFactory('listItemGroup'),\n  ToggleableFactory('inputValue')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  isInGroup: boolean\n  isInList: boolean\n  isInMenu: boolean\n  isInNav: boolean\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-item',\n\n  directives: {\n    Ripple,\n  },\n\n  inject: {\n    isInGroup: {\n      default: false,\n    },\n    isInList: {\n      default: false,\n    },\n    isInMenu: {\n      default: false,\n    },\n    isInNav: {\n      default: false,\n    },\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.listItemGroup) return ''\n\n        return this.listItemGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    dense: Boolean,\n    inactive: Boolean,\n    link: Boolean,\n    selectable: {\n      type: Boolean,\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    threeLine: Boolean,\n    twoLine: Boolean,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-list-item--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-item': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-list-item--dense': this.dense,\n        'v-list-item--disabled': this.disabled,\n        'v-list-item--link': this.isClickable && !this.inactive,\n        'v-list-item--selectable': this.selectable,\n        'v-list-item--three-line': this.threeLine,\n        'v-list-item--two-line': this.twoLine,\n        ...this.themeClasses,\n      }\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.listItemGroup\n      )\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('avatar')) {\n      removed('avatar', this)\n    }\n  },\n\n  methods: {\n    click (e: MouseEvent | KeyboardEvent) {\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n    genAttrs () {\n      const attrs: Record<string, any> = {\n        'aria-disabled': this.disabled ? true : undefined,\n        tabindex: this.isClickable && !this.disabled ? 0 : -1,\n        ...this.$attrs,\n      }\n\n      if (this.$attrs.hasOwnProperty('role')) {\n        // do nothing, role already provided\n      } else if (this.isInNav) {\n        // do nothing, role is inherit\n      } else if (this.isInGroup) {\n        attrs.role = 'option'\n        attrs['aria-selected'] = String(this.isActive)\n      } else if (this.isInMenu) {\n        attrs.role = this.isClickable ? 'menuitem' : undefined\n        attrs.id = attrs.id || `list-item-${this._uid}`\n      } else if (this.isInList) {\n        attrs.role = 'listitem'\n      }\n\n      return attrs\n    },\n    toggle () {\n      if (this.to && this.inputValue === undefined) {\n        this.isActive = !this.isActive\n      }\n      this.$emit('change')\n    },\n  },\n\n  render (h): VNode {\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      ...this.genAttrs(),\n    }\n    data[this.to ? 'nativeOn' : 'on'] = {\n      ...data[this.to ? 'nativeOn' : 'on'],\n      keydown: (e: KeyboardEvent) => {\n        /* istanbul ignore else */\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    if (this.inactive) tag = 'div'\n    if (this.inactive && this.to) {\n      data.on = data.nativeOn\n      delete data.nativeOn\n    }\n\n    const children = this.$scopedSlots.default\n      ? this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n      : this.$slots.default\n\n    return h(tag, this.isActive ? this.setTextColor(this.color, data) : data, children)\n  },\n})\n"]},"metadata":{},"sourceType":"module"}