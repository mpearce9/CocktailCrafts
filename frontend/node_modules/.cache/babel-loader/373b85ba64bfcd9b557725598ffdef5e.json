{"ast":null,"code":"// Mixins\nimport { inject } from '../../mixins/registrable'; // Utilities\n\nimport { convertToUnit } from '../../util/helpers';\nimport { easeInOutCubic } from '../../services/goto/easing-patterns';\nvar base = inject('VAppBar', 'v-app-bar-title', 'v-app-bar');\nexport default base.extend().extend({\n  name: 'v-app-bar-title',\n  data: function data() {\n    return {\n      contentWidth: 0,\n      left: 0,\n      width: 0\n    };\n  },\n  watch: {\n    '$vuetify.breakpoint.width': 'updateDimensions'\n  },\n  computed: {\n    styles: function styles() {\n      if (!this.contentWidth) return {};\n      var min = this.width;\n      var max = this.contentWidth;\n      var ratio = easeInOutCubic(Math.min(1, this.VAppBar.scrollRatio * 1.5));\n      return {\n        width: convertToUnit(min + (max - min) * ratio),\n        visibility: this.VAppBar.scrollRatio ? 'visible' : 'hidden'\n      };\n    }\n  },\n  mounted: function mounted() {\n    this.updateDimensions();\n  },\n  methods: {\n    updateDimensions: function updateDimensions() {\n      var dimensions = this.$refs.placeholder.getBoundingClientRect();\n      this.width = dimensions.width;\n      this.left = dimensions.left;\n      this.contentWidth = this.$refs.content.scrollWidth;\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      \"class\": 'v-toolbar__title v-app-bar-title'\n    }, [h('div', {\n      \"class\": 'v-app-bar-title__content',\n      style: this.styles,\n      ref: 'content'\n    }, [this.$slots[\"default\"]]), h('div', {\n      \"class\": 'v-app-bar-title__placeholder',\n      style: {\n        visibility: this.VAppBar.scrollRatio ? 'hidden' : 'visible'\n      },\n      ref: 'placeholder'\n    }, [this.$slots[\"default\"]])]);\n  }\n});","map":{"version":3,"mappings":"AAAA;AACA,SAASA,MAAT,QAAuB,0BAAvB,C,CAOA;;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,cAAT,QAA+B,qCAA/B;AAEA,IAAMC,IAAI,GAAGH,MAAM,CAA4B,SAA5B,EAAuC,iBAAvC,EAA0D,WAA1D,CAAnB;AASA,eAAeG,IAAI,CAACC,MAAL,GAAuBA,MAAvB,CAA8B;AAC3CC,MAAI,EAAE,iBADqC;AAG3CC,MAAI,EAAE;AAAA,WAAO;AACXC,kBAAY,EAAE,CADH;AAEXC,UAAI,EAAE,CAFK;AAGXC,WAAK,EAAE;AAHI,KAAP;AAAA,GAHqC;AAS3CC,OAAK,EAAE;AACL,iCAA6B;AADxB,GAToC;AAa3CC,UAAQ,EAAE;AACRC,UADQ,oBACF;AACJ,UAAI,CAAC,KAAKL,YAAV,EAAwB,OAAO,EAAP;AAExB,UAAMM,GAAG,GAAG,KAAKJ,KAAjB;AACA,UAAMK,GAAG,GAAG,KAAKP,YAAjB;AACA,UAAMQ,KAAK,GAAGb,cAAc,CAACc,IAAI,CAACH,GAAL,CAAS,CAAT,EAAY,KAAKI,OAAL,CAAaC,WAAb,GAA2B,GAAvC,CAAD,CAA5B;AACA,aAAO;AACLT,aAAK,EAAER,aAAa,CAACY,GAAG,GAAG,CAACC,GAAG,GAAGD,GAAP,IAAcE,KAArB,CADf;AAELI,kBAAU,EAAE,KAAKF,OAAL,CAAaC,WAAb,GAA2B,SAA3B,GAAuC;AAF9C,OAAP;AAID;AAXO,GAbiC;AA2B3CE,SA3B2C,qBA2BpC;AACL,SAAKC,gBAAL;AA5ByC;AA+B3CC,SAAO,EAAE;AACPD,oBADO,8BACS;AACd,UAAME,UAAU,GAAG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,qBAAvB,EAAnB;AACA,WAAKjB,KAAL,GAAac,UAAU,CAACd,KAAxB;AACA,WAAKD,IAAL,GAAYe,UAAU,CAACf,IAAvB;AACA,WAAKD,YAAL,GAAoB,KAAKiB,KAAL,CAAWG,OAAX,CAAmBC,WAAvC;AACD;AANM,GA/BkC;AAwC3CC,QAxC2C,kBAwCnCC,CAxCmC,EAwClC;AACP,WAAOA,CAAC,CAAC,KAAD,EAAQ;AACd,eAAO;AADO,KAAR,EAEL,CACDA,CAAC,CAAC,KAAD,EAAQ;AACP,eAAO,0BADA;AAEPC,WAAK,EAAE,KAAKnB,MAFL;AAGPoB,SAAG,EAAE;AAHE,KAAR,EAIE,CAAC,KAAKC,MAAL,WAAD,CAJF,CADA,EAMDH,CAAC,CAAC,KAAD,EAAQ;AACP,eAAO,8BADA;AAEPC,WAAK,EAAE;AACLZ,kBAAU,EAAE,KAAKF,OAAL,CAAaC,WAAb,GAA2B,QAA3B,GAAsC;AAD7C,OAFA;AAKPc,SAAG,EAAE;AALE,KAAR,EAME,CAAC,KAAKC,MAAL,WAAD,CANF,CANA,CAFK,CAAR;AAgBD;AAzD0C,CAA9B,CAAf","names":["inject","convertToUnit","easeInOutCubic","base","extend","name","data","contentWidth","left","width","watch","computed","styles","min","max","ratio","Math","VAppBar","scrollRatio","visibility","mounted","updateDimensions","methods","dimensions","$refs","placeholder","getBoundingClientRect","content","scrollWidth","render","h","style","ref","$slots"],"sourceRoot":"","sources":["../../../src/components/VAppBar/VAppBarTitle.ts"],"sourcesContent":["// Mixins\nimport { inject } from '../../mixins/registrable'\n\n// Types\nimport { VNode } from 'vue'\nimport { ExtractVue } from '../../util/mixins'\nimport VAppBar from './VAppBar'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport { easeInOutCubic } from '../../services/goto/easing-patterns'\n\nconst base = inject<'VAppBar', typeof VAppBar>('VAppBar', 'v-app-bar-title', 'v-app-bar')\n\ninterface options extends ExtractVue<typeof base> {\n  $refs: {\n    content: Element\n    placeholder: Element\n  }\n}\n\nexport default base.extend<options>().extend({\n  name: 'v-app-bar-title',\n\n  data: () => ({\n    contentWidth: 0,\n    left: 0,\n    width: 0,\n  }),\n\n  watch: {\n    '$vuetify.breakpoint.width': 'updateDimensions',\n  },\n\n  computed: {\n    styles (): object {\n      if (!this.contentWidth) return {}\n\n      const min = this.width\n      const max = this.contentWidth\n      const ratio = easeInOutCubic(Math.min(1, this.VAppBar.scrollRatio * 1.5))\n      return {\n        width: convertToUnit(min + (max - min) * ratio),\n        visibility: this.VAppBar.scrollRatio ? 'visible' : 'hidden',\n      }\n    },\n  },\n\n  mounted () {\n    this.updateDimensions()\n  },\n\n  methods: {\n    updateDimensions (): void {\n      const dimensions = this.$refs.placeholder.getBoundingClientRect()\n      this.width = dimensions.width\n      this.left = dimensions.left\n      this.contentWidth = this.$refs.content.scrollWidth\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      class: 'v-toolbar__title v-app-bar-title',\n    }, [\n      h('div', {\n        class: 'v-app-bar-title__content',\n        style: this.styles,\n        ref: 'content',\n      }, [this.$slots.default]),\n      h('div', {\n        class: 'v-app-bar-title__placeholder',\n        style: {\n          visibility: this.VAppBar.scrollRatio ? 'hidden' : 'visible',\n        },\n        ref: 'placeholder',\n      }, [this.$slots.default]),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}