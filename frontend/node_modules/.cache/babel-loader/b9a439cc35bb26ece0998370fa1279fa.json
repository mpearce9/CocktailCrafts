{"ast":null,"code":"import mergeData from '../../util/mergeData';\n\nfunction mergeTransitions() {\n  var _Array;\n\n  var dest = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  for (var _len = arguments.length, transitions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    transitions[_key - 1] = arguments[_key];\n  }\n\n  /* eslint-disable-next-line no-array-constructor */\n  return (_Array = Array()).concat.apply(_Array, [dest].concat(transitions));\n}\n\nexport function createSimpleTransition(name) {\n  var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top center 0';\n  var mode = arguments.length > 2 ? arguments[2] : undefined;\n  return {\n    name: name,\n    functional: true,\n    props: {\n      group: {\n        type: Boolean,\n        \"default\": false\n      },\n      hideOnLeave: {\n        type: Boolean,\n        \"default\": false\n      },\n      leaveAbsolute: {\n        type: Boolean,\n        \"default\": false\n      },\n      mode: {\n        type: String,\n        \"default\": mode\n      },\n      origin: {\n        type: String,\n        \"default\": origin\n      }\n    },\n    render: function render(h, context) {\n      var tag = \"transition\".concat(context.props.group ? '-group' : '');\n      var data = {\n        props: {\n          name: name,\n          mode: context.props.mode\n        },\n        on: {\n          beforeEnter: function beforeEnter(el) {\n            el.style.transformOrigin = context.props.origin;\n            el.style.webkitTransformOrigin = context.props.origin;\n          }\n        }\n      };\n\n      if (context.props.leaveAbsolute) {\n        data.on.leave = mergeTransitions(data.on.leave, function (el) {\n          var offsetTop = el.offsetTop,\n              offsetLeft = el.offsetLeft,\n              offsetWidth = el.offsetWidth,\n              offsetHeight = el.offsetHeight;\n          el._transitionInitialStyles = {\n            position: el.style.position,\n            top: el.style.top,\n            left: el.style.left,\n            width: el.style.width,\n            height: el.style.height\n          };\n          el.style.position = 'absolute';\n          el.style.top = offsetTop + 'px';\n          el.style.left = offsetLeft + 'px';\n          el.style.width = offsetWidth + 'px';\n          el.style.height = offsetHeight + 'px';\n        });\n        data.on.afterLeave = mergeTransitions(data.on.afterLeave, function (el) {\n          if (el && el._transitionInitialStyles) {\n            var _el$_transitionInitia = el._transitionInitialStyles,\n                position = _el$_transitionInitia.position,\n                top = _el$_transitionInitia.top,\n                left = _el$_transitionInitia.left,\n                width = _el$_transitionInitia.width,\n                height = _el$_transitionInitia.height;\n            delete el._transitionInitialStyles;\n            el.style.position = position || '';\n            el.style.top = top || '';\n            el.style.left = left || '';\n            el.style.width = width || '';\n            el.style.height = height || '';\n          }\n        });\n      }\n\n      if (context.props.hideOnLeave) {\n        data.on.leave = mergeTransitions(data.on.leave, function (el) {\n          el.style.setProperty('display', 'none', 'important');\n        });\n      }\n\n      return h(tag, mergeData(context.data, data), context.children);\n    }\n  };\n}\nexport function createJavascriptTransition(name, functions) {\n  var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'in-out';\n  return {\n    name: name,\n    functional: true,\n    props: {\n      mode: {\n        type: String,\n        \"default\": mode\n      }\n    },\n    render: function render(h, context) {\n      return h('transition', mergeData(context.data, {\n        props: {\n          name: name\n        },\n        on: functions\n      }), context.children);\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["mergeData","mergeTransitions","dest","transitions","concat","createSimpleTransition","name","origin","mode","functional","props","group","type","Boolean","hideOnLeave","leaveAbsolute","String","render","h","context","tag","data","on","beforeEnter","el","style","transformOrigin","webkitTransformOrigin","leave","offsetTop","offsetLeft","offsetWidth","offsetHeight","_transitionInitialStyles","position","top","left","width","height","afterLeave","setProperty","children","createJavascriptTransition","functions"],"sourceRoot":"","sources":["../../../src/components/transitions/createTransition.ts"],"sourcesContent":["import { FunctionalComponentOptions, VNode, VNodeData } from 'vue'\nimport mergeData from '../../util/mergeData'\n\nfunction mergeTransitions (\n  dest: Function | Function[] = [],\n  ...transitions: (Function | Function[])[]\n) {\n  /* eslint-disable-next-line no-array-constructor */\n  return Array<Function>().concat(dest, ...transitions)\n}\n\nexport function createSimpleTransition (\n  name: string,\n  origin = 'top center 0',\n  mode?: string\n): FunctionalComponentOptions {\n  return {\n    name,\n\n    functional: true,\n\n    props: {\n      group: {\n        type: Boolean,\n        default: false,\n      },\n      hideOnLeave: {\n        type: Boolean,\n        default: false,\n      },\n      leaveAbsolute: {\n        type: Boolean,\n        default: false,\n      },\n      mode: {\n        type: String,\n        default: mode,\n      },\n      origin: {\n        type: String,\n        default: origin,\n      },\n    },\n\n    render (h, context): VNode {\n      const tag = `transition${context.props.group ? '-group' : ''}`\n      const data: VNodeData = {\n        props: {\n          name,\n          mode: context.props.mode,\n        },\n        on: {\n          beforeEnter (el: HTMLElement) {\n            el.style.transformOrigin = context.props.origin\n            el.style.webkitTransformOrigin = context.props.origin\n          },\n        },\n      }\n\n      if (context.props.leaveAbsolute) {\n        data.on!.leave = mergeTransitions(data.on!.leave, (el: HTMLElement) => {\n          const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = el\n          el._transitionInitialStyles = {\n            position: el.style.position,\n            top: el.style.top,\n            left: el.style.left,\n            width: el.style.width,\n            height: el.style.height,\n          }\n          el.style.position = 'absolute'\n          el.style.top = offsetTop + 'px'\n          el.style.left = offsetLeft + 'px'\n          el.style.width = offsetWidth + 'px'\n          el.style.height = offsetHeight + 'px'\n        })\n        data.on!.afterLeave = mergeTransitions(data.on!.afterLeave, (el?: HTMLElement) => {\n          if (el && el._transitionInitialStyles) {\n            const { position, top, left, width, height } = el._transitionInitialStyles\n            delete el._transitionInitialStyles\n            el.style.position = position || ''\n            el.style.top = top || ''\n            el.style.left = left || ''\n            el.style.width = width || ''\n            el.style.height = height || ''\n          }\n        })\n      }\n      if (context.props.hideOnLeave) {\n        data.on!.leave = mergeTransitions(data.on!.leave, (el: HTMLElement) => {\n          el.style.setProperty('display', 'none', 'important')\n        })\n      }\n\n      return h(tag, mergeData(context.data, data), context.children)\n    },\n  }\n}\n\nexport function createJavascriptTransition (\n  name: string,\n  functions: Record<string, any>,\n  mode = 'in-out'\n): FunctionalComponentOptions {\n  return {\n    name,\n\n    functional: true,\n\n    props: {\n      mode: {\n        type: String,\n        default: mode,\n      },\n    },\n\n    render (h, context): VNode {\n      return h(\n        'transition',\n        mergeData(context.data, {\n          props: { name },\n          on: functions,\n        }),\n        context.children\n      )\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}