{"ast":null,"code":"// Directives\nimport Intersect from '../../directives/intersect'; // Utilities\n\nimport { consoleWarn } from '../../util/console'; // Types\n\nimport Vue from 'vue';\nexport default function intersectable(options) {\n  return Vue.extend({\n    name: 'intersectable',\n    data: function data() {\n      return {\n        isIntersecting: false\n      };\n    },\n    mounted: function mounted() {\n      Intersect.inserted(this.$el, {\n        name: 'intersect',\n        value: this.onObserve\n      }, this.$vnode);\n    },\n    destroyed: function destroyed() {\n      Intersect.unbind(this.$el, {\n        name: 'intersect',\n        value: this.onObserve\n      }, this.$vnode);\n    },\n    methods: {\n      onObserve: function onObserve(entries, observer, isIntersecting) {\n        this.isIntersecting = isIntersecting;\n        if (!isIntersecting) return;\n\n        for (var i = 0, length = options.onVisible.length; i < length; i++) {\n          var callback = this[options.onVisible[i]];\n\n          if (typeof callback === 'function') {\n            callback();\n            continue;\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options');\n        }\n      }\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA,OAAOA,SAAP,MAAsB,4BAAtB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,oBAA5B,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA,eAAc,SAAUC,aAAV,CAAyBC,OAAzB,EAAyD;AACrE,SAAOF,GAAG,CAACG,MAAJ,CAAW;AAChBC,QAAI,EAAE,eADU;AAGhBC,QAAI,EAAE;AAAA,aAAO;AACXC,sBAAc,EAAE;AADL,OAAP;AAAA,KAHU;AAOhBC,WAPgB,qBAOT;AACLT,eAAS,CAACU,QAAV,CAAmB,KAAKC,GAAxB,EAA4C;AAC1CL,YAAI,EAAE,WADoC;AAE1CM,aAAK,EAAE,KAAKC;AAF8B,OAA5C,EAGG,KAAKC,MAHR;AARc;AAchBC,aAdgB,uBAcP;AACPf,eAAS,CAACgB,MAAV,CAAiB,KAAKL,GAAtB,EAA0C;AACxCL,YAAI,EAAE,WADkC;AAExCM,aAAK,EAAE,KAAKC;AAF4B,OAA1C,EAGG,KAAKC,MAHR;AAfc;AAqBhBG,WAAO,EAAE;AACPJ,eADO,qBACIK,OADJ,EAC0CC,QAD1C,EAC0EX,cAD1E,EACiG;AACtG,aAAKA,cAAL,GAAsBA,cAAtB;AAEA,YAAI,CAACA,cAAL,EAAqB;;AAErB,aAAK,IAAIY,CAAC,GAAG,CAAR,EAAWC,MAAM,GAAGjB,OAAO,CAACkB,SAAR,CAAkBD,MAA3C,EAAmDD,CAAC,GAAGC,MAAvD,EAA+DD,CAAC,EAAhE,EAAoE;AAClE,cAAMG,QAAQ,GAAI,KAAanB,OAAO,CAACkB,SAAR,CAAkBF,CAAlB,CAAb,CAAlB;;AAEA,cAAI,OAAOG,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,oBAAQ;AACR;AACD;;AAEDtB,qBAAW,CAACG,OAAO,CAACkB,SAAR,CAAkBF,CAAlB,IAAuB,wFAAxB,CAAX;AACD;AACF;AAhBM;AArBO,GAAX,CAAP;AAwCD","names":["Intersect","consoleWarn","Vue","intersectable","options","extend","name","data","isIntersecting","mounted","inserted","$el","value","onObserve","$vnode","destroyed","unbind","methods","entries","observer","i","length","onVisible","callback"],"sourceRoot":"","sources":["../../../src/mixins/intersectable/index.ts"],"sourcesContent":["// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  return Vue.extend({\n    name: 'intersectable',\n\n    data: () => ({\n      isIntersecting: false,\n    }),\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      }, this.$vnode)\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      }, this.$vnode)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        this.isIntersecting = isIntersecting\n\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"module"}