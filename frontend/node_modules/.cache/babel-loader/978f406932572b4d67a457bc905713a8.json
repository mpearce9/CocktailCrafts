{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Styles\nimport \"../../../src/components/VDivider/VDivider.sass\"; // Mixins\n\nimport Themeable from '../../mixins/themeable';\nexport default Themeable.extend({\n  name: 'v-divider',\n  props: {\n    inset: Boolean,\n    vertical: Boolean\n  },\n  render: function render(h) {\n    // WAI-ARIA attributes\n    var orientation;\n\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal';\n    }\n\n    return h('hr', {\n      \"class\": _objectSpread({\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical\n      }, this.themeClasses),\n      attrs: _objectSpread({\n        role: 'separator',\n        'aria-orientation': orientation\n      }, this.$attrs),\n      on: this.$listeners\n    });\n  }\n});","map":{"version":3,"mappings":";;;;;;AAAA;AACA,OAAO,gDAAP,C,CAKA;;AACA,OAAOA,SAAP,MAAsB,wBAAtB;AAEA,eAAeA,SAAS,CAACC,MAAV,CAAiB;AAC9BC,MAAI,EAAE,WADwB;AAG9BC,OAAK,EAAE;AACLC,SAAK,EAAEC,OADF;AAELC,YAAQ,EAAED;AAFL,GAHuB;AAQ9BE,QAR8B,kBAQtBC,CARsB,EAQrB;AACP;AACA,QAAIC,WAAJ;;AACA,QAAI,CAAC,KAAKC,MAAL,CAAYC,IAAb,IAAqB,KAAKD,MAAL,CAAYC,IAAZ,KAAqB,WAA9C,EAA2D;AACzDF,iBAAW,GAAG,KAAKH,QAAL,GAAgB,UAAhB,GAA6B,YAA3C;AACD;;AACD,WAAOE,CAAC,CAAC,IAAD,EAAO;AACb;AACE,qBAAa,IADf;AAEE,4BAAoB,KAAKJ,KAF3B;AAGE,+BAAuB,KAAKE;AAH9B,SAIK,KAAKM,YAJV,CADa;AAObC,WAAK;AACHF,YAAI,EAAE,WADH;AAEH,4BAAoBF;AAFjB,SAGA,KAAKC,MAHL,CAPQ;AAYbI,QAAE,EAAE,KAAKC;AAZI,KAAP,CAAR;AAcD;AA5B6B,CAAjB,CAAf","names":["Themeable","extend","name","props","inset","Boolean","vertical","render","h","orientation","$attrs","role","themeClasses","attrs","on","$listeners"],"sourceRoot":"","sources":["../../../src/components/VDivider/VDivider.ts"],"sourcesContent":["// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n"]},"metadata":{},"sourceType":"module"}