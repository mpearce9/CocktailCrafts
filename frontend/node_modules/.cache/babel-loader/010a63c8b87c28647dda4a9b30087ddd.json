{"ast":null,"code":"var _excluded = [\"anchor\"],\n    _excluded2 = [\"anchor\"];\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { keys } from '../../util/helpers';\nimport { colorToInt, intToHex, colorToHex } from '../../util/colorUtils';\nimport * as sRGB from '../../util/color/transformSRGB';\nimport * as LAB from '../../util/color/transformCIELAB';\nexport function parse(theme) {\n  var isItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var variations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  var anchor = theme.anchor,\n      variant = _objectWithoutProperties(theme, _excluded);\n\n  var colors = Object.keys(variant);\n  var parsedTheme = {};\n\n  for (var i = 0; i < colors.length; ++i) {\n    var name = colors[i];\n    var value = theme[name];\n    if (value == null) continue;\n\n    if (!variations) {\n      parsedTheme[name] = {\n        base: intToHex(colorToInt(value))\n      };\n    } else if (isItem) {\n      /* istanbul ignore else */\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\n        parsedTheme[name] = colorToHex(value);\n      }\n    } else if (_typeof(value) === 'object') {\n      parsedTheme[name] = parse(value, true, variations);\n    } else {\n      parsedTheme[name] = genVariations(name, colorToInt(value));\n    }\n  }\n\n  if (!isItem) {\n    parsedTheme.anchor = anchor || parsedTheme.base || parsedTheme.primary.base;\n  }\n\n  return parsedTheme;\n}\n/**\n * Generate the CSS for a base color (.primary)\n */\n\nvar genBaseColor = function genBaseColor(name, value) {\n  return \"\\n.v-application .\".concat(name, \" {\\n  background-color: \").concat(value, \" !important;\\n  border-color: \").concat(value, \" !important;\\n}\\n.v-application .\").concat(name, \"--text {\\n  color: \").concat(value, \" !important;\\n  caret-color: \").concat(value, \" !important;\\n}\");\n};\n/**\n * Generate the CSS for a variant color (.primary.darken-2)\n */\n\n\nvar genVariantColor = function genVariantColor(name, variant, value) {\n  var _variant$split = variant.split(/(\\d)/, 2),\n      _variant$split2 = _slicedToArray(_variant$split, 2),\n      type = _variant$split2[0],\n      n = _variant$split2[1];\n\n  return \"\\n.v-application .\".concat(name, \".\").concat(type, \"-\").concat(n, \" {\\n  background-color: \").concat(value, \" !important;\\n  border-color: \").concat(value, \" !important;\\n}\\n.v-application .\").concat(name, \"--text.text--\").concat(type, \"-\").concat(n, \" {\\n  color: \").concat(value, \" !important;\\n  caret-color: \").concat(value, \" !important;\\n}\");\n};\n\nvar genColorVariableName = function genColorVariableName(name) {\n  var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'base';\n  return \"--v-\".concat(name, \"-\").concat(variant);\n};\n\nvar genColorVariable = function genColorVariable(name) {\n  var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'base';\n  return \"var(\".concat(genColorVariableName(name, variant), \")\");\n};\n\nexport function genStyles(theme) {\n  var cssVar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var anchor = theme.anchor,\n      variant = _objectWithoutProperties(theme, _excluded2);\n\n  var colors = Object.keys(variant);\n  if (!colors.length) return '';\n  var variablesCss = '';\n  var css = '';\n  var aColor = cssVar ? genColorVariable('anchor') : anchor;\n  css += \".v-application a { color: \".concat(aColor, \"; }\");\n  cssVar && (variablesCss += \"  \".concat(genColorVariableName('anchor'), \": \").concat(anchor, \";\\n\"));\n\n  for (var i = 0; i < colors.length; ++i) {\n    var name = colors[i];\n    var value = theme[name];\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base);\n    cssVar && (variablesCss += \"  \".concat(genColorVariableName(name), \": \").concat(value.base, \";\\n\"));\n    var variants = keys(value);\n\n    for (var _i2 = 0; _i2 < variants.length; ++_i2) {\n      var _variant = variants[_i2];\n      var variantValue = value[_variant];\n      if (_variant === 'base') continue;\n      css += genVariantColor(name, _variant, cssVar ? genColorVariable(name, _variant) : variantValue);\n      cssVar && (variablesCss += \"  \".concat(genColorVariableName(name, _variant), \": \").concat(variantValue, \";\\n\"));\n    }\n  }\n\n  if (cssVar) {\n    variablesCss = \":root {\\n\".concat(variablesCss, \"}\\n\\n\");\n  }\n\n  return variablesCss + css;\n}\nexport function genVariations(name, value) {\n  var values = {\n    base: intToHex(value)\n  };\n\n  for (var i = 5; i > 0; --i) {\n    values[\"lighten\".concat(i)] = intToHex(lighten(value, i));\n  }\n\n  for (var _i3 = 1; _i3 <= 4; ++_i3) {\n    values[\"darken\".concat(_i3)] = intToHex(darken(value, _i3));\n  }\n\n  return values;\n}\nexport function lighten(value, amount) {\n  var lab = LAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] + amount * 10;\n  return sRGB.fromXYZ(LAB.toXYZ(lab));\n}\nexport function darken(value, amount) {\n  var lab = LAB.fromXYZ(sRGB.toXYZ(value));\n  lab[0] = lab[0] - amount * 10;\n  return sRGB.fromXYZ(LAB.toXYZ(lab));\n}","map":{"version":3,"mappings":"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","names":["keys","colorToInt","intToHex","colorToHex","sRGB","LAB","parse","theme","isItem","variations","anchor","variant","colors","Object","parsedTheme","i","length","name","value","base","startsWith","genVariations","primary","genBaseColor","genVariantColor","split","type","n","genColorVariableName","genColorVariable","genStyles","cssVar","variablesCss","css","aColor","variants","variantValue","values","lighten","darken","amount","lab","fromXYZ","toXYZ"],"sourceRoot":"","sources":["../../../src/services/theme/utils.ts"],"sourcesContent":["import { keys } from '../../util/helpers'\nimport { colorToInt, intToHex, colorToHex, ColorInt } from '../../util/colorUtils'\nimport * as sRGB from '../../util/color/transformSRGB'\nimport * as LAB from '../../util/color/transformCIELAB'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemeItem,\n} from 'vuetify/types/services/theme'\n\nexport function parse (\n  theme: Record<string, VuetifyThemeItem>,\n  isItem = false,\n  variations = true,\n): VuetifyParsedTheme {\n  const { anchor, ...variant } = theme\n  const colors = Object.keys(variant)\n  const parsedTheme: any = {}\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    if (value == null) continue\n\n    if (!variations) {\n      parsedTheme[name] = { base: intToHex(colorToInt(value)) }\n    } else if (isItem) {\n      /* istanbul ignore else */\n      if (name === 'base' || name.startsWith('lighten') || name.startsWith('darken')) {\n        parsedTheme[name] = colorToHex(value)\n      }\n    } else if (typeof value === 'object') {\n      parsedTheme[name] = parse(value, true, variations)\n    } else {\n      parsedTheme[name] = genVariations(name, colorToInt(value))\n    }\n  }\n\n  if (!isItem) {\n    parsedTheme.anchor = anchor || parsedTheme.base || parsedTheme.primary.base\n  }\n\n  return parsedTheme\n}\n\n/**\n * Generate the CSS for a base color (.primary)\n */\nconst genBaseColor = (name: string, value: string): string => {\n  return `\n.v-application .${name} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\n/**\n * Generate the CSS for a variant color (.primary.darken-2)\n */\nconst genVariantColor = (name: string, variant: string, value: string): string => {\n  const [type, n] = variant.split(/(\\d)/, 2)\n  return `\n.v-application .${name}.${type}-${n} {\n  background-color: ${value} !important;\n  border-color: ${value} !important;\n}\n.v-application .${name}--text.text--${type}-${n} {\n  color: ${value} !important;\n  caret-color: ${value} !important;\n}`\n}\n\nconst genColorVariableName = (name: string, variant = 'base'): string => `--v-${name}-${variant}`\n\nconst genColorVariable = (name: string, variant = 'base'): string => `var(${genColorVariableName(name, variant)})`\n\nexport function genStyles (theme: VuetifyParsedTheme, cssVar = false): string {\n  const { anchor, ...variant } = theme\n  const colors = Object.keys(variant)\n\n  if (!colors.length) return ''\n\n  let variablesCss = ''\n  let css = ''\n\n  const aColor = cssVar ? genColorVariable('anchor') : anchor\n  css += `.v-application a { color: ${aColor}; }`\n  cssVar && (variablesCss += `  ${genColorVariableName('anchor')}: ${anchor};\\n`)\n\n  for (let i = 0; i < colors.length; ++i) {\n    const name = colors[i]\n    const value = theme[name]\n\n    css += genBaseColor(name, cssVar ? genColorVariable(name) : value.base)\n    cssVar && (variablesCss += `  ${genColorVariableName(name)}: ${value.base};\\n`)\n\n    const variants = keys(value)\n    for (let i = 0; i < variants.length; ++i) {\n      const variant = variants[i]\n      const variantValue = value[variant]\n      if (variant === 'base') continue\n\n      css += genVariantColor(name, variant, cssVar ? genColorVariable(name, variant) : variantValue)\n      cssVar && (variablesCss += `  ${genColorVariableName(name, variant)}: ${variantValue};\\n`)\n    }\n  }\n\n  if (cssVar) {\n    variablesCss = `:root {\\n${variablesCss}}\\n\\n`\n  }\n\n  return variablesCss + css\n}\n\nexport function genVariations (name: string, value: ColorInt): Record<string, string> {\n  const values: Record<string, string> = {\n    base: intToHex(value),\n  }\n\n  for (let i = 5; i > 0; --i) {\n    values[`lighten${i}`] = intToHex(lighten(value, i))\n  }\n\n  for (let i = 1; i <= 4; ++i) {\n    values[`darken${i}`] = intToHex(darken(value, i))\n  }\n\n  return values\n}\n\nexport function lighten (value: ColorInt, amount: number): ColorInt {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] + amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n\nexport function darken (value: ColorInt, amount: number): ColorInt {\n  const lab = LAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n  return sRGB.fromXYZ(LAB.toXYZ(lab))\n}\n"]},"metadata":{},"sourceType":"module"}