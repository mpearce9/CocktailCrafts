{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nvar breakpoints = ['sm', 'md', 'lg', 'xl'];\nvar ALIGNMENT = ['start', 'end', 'center'];\n\nfunction makeProps(prefix, def) {\n  return breakpoints.reduce(function (props, val) {\n    props[prefix + upperFirst(val)] = def();\n    return props;\n  }, {});\n}\n\nvar alignValidator = function alignValidator(str) {\n  return [].concat(ALIGNMENT, ['baseline', 'stretch']).includes(str);\n};\n\nvar alignProps = makeProps('align', function () {\n  return {\n    type: String,\n    \"default\": null,\n    validator: alignValidator\n  };\n});\n\nvar justifyValidator = function justifyValidator(str) {\n  return [].concat(ALIGNMENT, ['space-between', 'space-around']).includes(str);\n};\n\nvar justifyProps = makeProps('justify', function () {\n  return {\n    type: String,\n    \"default\": null,\n    validator: justifyValidator\n  };\n});\n\nvar alignContentValidator = function alignContentValidator(str) {\n  return [].concat(ALIGNMENT, ['space-between', 'space-around', 'stretch']).includes(str);\n};\n\nvar alignContentProps = makeProps('alignContent', function () {\n  return {\n    type: String,\n    \"default\": null,\n    validator: alignContentValidator\n  };\n});\nvar propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps)\n};\nvar classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content'\n};\n\nfunction breakpointClass(type, prop, val) {\n  var className = classMap[type];\n\n  if (val == null) {\n    return undefined;\n  }\n\n  if (prop) {\n    // alignSm -> Sm\n    var breakpoint = prop.replace(type, '');\n    className += \"-\".concat(breakpoint);\n  } // .align-items-sm-center\n\n\n  className += \"-\".concat(val);\n  return className.toLowerCase();\n}\n\nvar cache = new Map();\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: _objectSpread(_objectSpread(_objectSpread({\n    tag: {\n      type: String,\n      \"default\": 'div'\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      \"default\": null,\n      validator: alignValidator\n    }\n  }, alignProps), {}, {\n    justify: {\n      type: String,\n      \"default\": null,\n      validator: justifyValidator\n    }\n  }, justifyProps), {}, {\n    alignContent: {\n      type: String,\n      \"default\": null,\n      validator: alignContentValidator\n    }\n  }, alignContentProps),\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    var cacheKey = '';\n\n    for (var prop in props) {\n      cacheKey += String(props[prop]);\n    }\n\n    var classList = cache.get(cacheKey);\n\n    if (!classList) {\n      (function () {\n        var _classList$push;\n\n        classList = []; // Loop through `align`, `justify`, `alignContent` breakpoint props\n\n        var type;\n\n        for (type in propMap) {\n          propMap[type].forEach(function (prop) {\n            var value = props[prop];\n            var className = breakpointClass(type, prop, value);\n            if (className) classList.push(className);\n          });\n        }\n\n        classList.push((_classList$push = {\n          'no-gutters': props.noGutters,\n          'row--dense': props.dense\n        }, _defineProperty(_classList$push, \"align-\".concat(props.align), props.align), _defineProperty(_classList$push, \"justify-\".concat(props.justify), props.justify), _defineProperty(_classList$push, \"align-content-\".concat(props.alignContent), props.alignContent), _classList$push));\n        cache.set(cacheKey, classList);\n      })();\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'row',\n      \"class\": classList\n    }), children);\n  }\n});","map":{"version":3,"mappings":"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","names":["Vue","mergeData","upperFirst","breakpoints","ALIGNMENT","makeProps","prefix","def","reduce","props","val","alignValidator","includes","str","alignProps","type","String","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","keys","justify","alignContent","classMap","breakpointClass","prop","className","undefined","breakpoint","replace","toLowerCase","cache","Map","extend","name","functional","tag","dense","Boolean","noGutters","render","h","data","children","cacheKey","classList","get","forEach","value","push","set","staticClass"],"sourceRoot":"","sources":["../../../src/components/VGrid/VRow.ts"],"sourcesContent":["import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n"]},"metadata":{},"sourceType":"module"}