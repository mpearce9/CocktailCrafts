{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Styles\nimport \"../../../src/components/VList/VListGroup.sass\"; // Components\n\nimport VIcon from '../VIcon';\nimport VListItem from './VListItem';\nimport VListItemIcon from './VListItemIcon'; // Mixins\n\nimport BindsAttrs from '../../mixins/binds-attrs';\nimport Bootable from '../../mixins/bootable';\nimport Colorable from '../../mixins/colorable';\nimport Toggleable from '../../mixins/toggleable';\nimport { inject as RegistrableInject } from '../../mixins/registrable'; // Directives\n\nimport ripple from '../../directives/ripple'; // Transitions\n\nimport { VExpandTransition } from '../transitions'; // Utils\n\nimport mixins from '../../util/mixins';\nimport { getSlot } from '../../util/helpers';\nvar baseMixins = mixins(BindsAttrs, Bootable, Colorable, RegistrableInject('list'), Toggleable);\nexport default baseMixins.extend().extend({\n  name: 'v-list-group',\n  directives: {\n    ripple: ripple\n  },\n  props: {\n    activeClass: {\n      type: String,\n      \"default\": ''\n    },\n    appendIcon: {\n      type: String,\n      \"default\": '$expand'\n    },\n    color: {\n      type: String,\n      \"default\": 'primary'\n    },\n    disabled: Boolean,\n    group: [String, RegExp],\n    noAction: Boolean,\n    prependIcon: String,\n    ripple: {\n      type: [Boolean, Object],\n      \"default\": true\n    },\n    subGroup: Boolean\n  },\n  computed: {\n    classes: function classes() {\n      return {\n        'v-list-group--active': this.isActive,\n        'v-list-group--disabled': this.disabled,\n        'v-list-group--no-action': this.noAction,\n        'v-list-group--sub-group': this.subGroup\n      };\n    }\n  },\n  watch: {\n    isActive: function isActive(val) {\n      /* istanbul ignore else */\n      if (!this.subGroup && val) {\n        this.list && this.list.listClick(this._uid);\n      }\n    },\n    $route: 'onRouteChange'\n  },\n  created: function created() {\n    this.list && this.list.register(this);\n\n    if (this.group && this.$route && this.value == null) {\n      this.isActive = this.matchRoute(this.$route.path);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.list && this.list.unregister(this);\n  },\n  methods: {\n    click: function click(e) {\n      var _this = this;\n\n      if (this.disabled) return;\n      this.isBooted = true;\n      this.$emit('click', e);\n      this.$nextTick(function () {\n        return _this.isActive = !_this.isActive;\n      });\n    },\n    genIcon: function genIcon(icon) {\n      return this.$createElement(VIcon, icon);\n    },\n    genAppendIcon: function genAppendIcon() {\n      var icon = !this.subGroup ? this.appendIcon : false;\n      if (!icon && !this.$slots.appendIcon) return null;\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__append-icon'\n      }, [this.$slots.appendIcon || this.genIcon(icon)]);\n    },\n    genHeader: function genHeader() {\n      return this.$createElement(VListItem, {\n        staticClass: 'v-list-group__header',\n        attrs: {\n          'aria-expanded': String(this.isActive),\n          role: 'button'\n        },\n        \"class\": _defineProperty({}, this.activeClass, this.isActive),\n        props: {\n          inputValue: this.isActive\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.ripple\n        }],\n        on: _objectSpread(_objectSpread({}, this.listeners$), {}, {\n          click: this.click\n        })\n      }, [this.genPrependIcon(), this.$slots.activator, this.genAppendIcon()]);\n    },\n    genItems: function genItems() {\n      var _this2 = this;\n\n      return this.showLazyContent(function () {\n        return [_this2.$createElement('div', {\n          staticClass: 'v-list-group__items',\n          directives: [{\n            name: 'show',\n            value: _this2.isActive\n          }]\n        }, getSlot(_this2))];\n      });\n    },\n    genPrependIcon: function genPrependIcon() {\n      var icon = this.subGroup && this.prependIcon == null ? '$subgroup' : this.prependIcon;\n      if (!icon && !this.$slots.prependIcon) return null;\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__prepend-icon'\n      }, [this.$slots.prependIcon || this.genIcon(icon)]);\n    },\n    onRouteChange: function onRouteChange(to) {\n      /* istanbul ignore if */\n      if (!this.group) return;\n      var isActive = this.matchRoute(to.path);\n      /* istanbul ignore else */\n\n      if (isActive && this.isActive !== isActive) {\n        this.list && this.list.listClick(this._uid);\n      }\n\n      this.isActive = isActive;\n    },\n    toggle: function toggle(uid) {\n      var _this3 = this;\n\n      var isActive = this._uid === uid;\n      if (isActive) this.isBooted = true;\n      this.$nextTick(function () {\n        return _this3.isActive = isActive;\n      });\n    },\n    matchRoute: function matchRoute(to) {\n      return to.match(this.group) !== null;\n    }\n  },\n  render: function render(h) {\n    return h('div', this.setTextColor(this.isActive && this.color, {\n      staticClass: 'v-list-group',\n      \"class\": this.classes\n    }), [this.genHeader(), h(VExpandTransition, this.genItems())]);\n  }\n});","map":{"version":3,"mappings":"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","names":["VIcon","VListItem","VListItemIcon","BindsAttrs","Bootable","Colorable","Toggleable","inject","RegistrableInject","ripple","VExpandTransition","mixins","getSlot","baseMixins","extend","name","directives","props","activeClass","type","String","appendIcon","color","disabled","Boolean","group","RegExp","noAction","prependIcon","Object","subGroup","computed","classes","isActive","watch","val","list","listClick","_uid","$route","created","register","value","matchRoute","path","beforeDestroy","unregister","methods","click","e","isBooted","$emit","$nextTick","genIcon","icon","$createElement","genAppendIcon","$slots","staticClass","genHeader","attrs","role","inputValue","on","listeners$","genPrependIcon","activator","genItems","showLazyContent","onRouteChange","to","toggle","uid","match","render","h","setTextColor"],"sourceRoot":"","sources":["../../../src/components/VList/VListGroup.ts"],"sourcesContent":["// Styles\nimport './VListGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VList from './VList'\nimport VListItem from './VListItem'\nimport VListItemIcon from './VListItemIcon'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport Toggleable from '../../mixins/toggleable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Transitions\nimport { VExpandTransition } from '../transitions'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getSlot } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport { Route } from 'vue-router'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Bootable,\n  Colorable,\n  RegistrableInject('list'),\n  Toggleable\n)\n\ntype VListInstance = InstanceType<typeof VList>\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  list: VListInstance\n  $refs: {\n    group: HTMLElement\n  }\n  $route: Route\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-group',\n\n  directives: { ripple },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    appendIcon: {\n      type: String,\n      default: '$expand',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    disabled: Boolean,\n    group: [String, RegExp],\n    noAction: Boolean,\n    prependIcon: String,\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n    subGroup: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-group--active': this.isActive,\n        'v-list-group--disabled': this.disabled,\n        'v-list-group--no-action': this.noAction,\n        'v-list-group--sub-group': this.subGroup,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val: boolean) {\n      /* istanbul ignore else */\n      if (!this.subGroup && val) {\n        this.list && this.list.listClick(this._uid)\n      }\n    },\n    $route: 'onRouteChange',\n  },\n\n  created () {\n    this.list && this.list.register(this)\n\n    if (this.group &&\n      this.$route &&\n      this.value == null\n    ) {\n      this.isActive = this.matchRoute(this.$route.path)\n    }\n  },\n\n  beforeDestroy () {\n    this.list && this.list.unregister(this)\n  },\n\n  methods: {\n    click (e: Event) {\n      if (this.disabled) return\n\n      this.isBooted = true\n\n      this.$emit('click', e)\n      this.$nextTick(() => (this.isActive = !this.isActive))\n    },\n    genIcon (icon: string | false): VNode {\n      return this.$createElement(VIcon, icon)\n    },\n    genAppendIcon (): VNode | null {\n      const icon = !this.subGroup ? this.appendIcon : false\n\n      if (!icon && !this.$slots.appendIcon) return null\n\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__append-icon',\n      }, [\n        this.$slots.appendIcon || this.genIcon(icon),\n      ])\n    },\n    genHeader (): VNode {\n      return this.$createElement(VListItem, {\n        staticClass: 'v-list-group__header',\n        attrs: {\n          'aria-expanded': String(this.isActive),\n          role: 'button',\n        },\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        props: {\n          inputValue: this.isActive,\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.ripple,\n        }],\n        on: {\n          ...this.listeners$,\n          click: this.click,\n        },\n      }, [\n        this.genPrependIcon(),\n        this.$slots.activator,\n        this.genAppendIcon(),\n      ])\n    },\n    genItems (): VNode[] {\n      return this.showLazyContent(() => [\n        this.$createElement('div', {\n          staticClass: 'v-list-group__items',\n          directives: [{\n            name: 'show',\n            value: this.isActive,\n          }],\n        }, getSlot(this)),\n      ])\n    },\n    genPrependIcon (): VNode | null {\n      const icon = this.subGroup && this.prependIcon == null\n        ? '$subgroup'\n        : this.prependIcon\n\n      if (!icon && !this.$slots.prependIcon) return null\n\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__prepend-icon',\n      }, [\n        this.$slots.prependIcon || this.genIcon(icon),\n      ])\n    },\n    onRouteChange (to: Route) {\n      /* istanbul ignore if */\n      if (!this.group) return\n\n      const isActive = this.matchRoute(to.path)\n\n      /* istanbul ignore else */\n      if (isActive && this.isActive !== isActive) {\n        this.list && this.list.listClick(this._uid)\n      }\n\n      this.isActive = isActive\n    },\n    toggle (uid: number) {\n      const isActive = this._uid === uid\n\n      if (isActive) this.isBooted = true\n      this.$nextTick(() => (this.isActive = isActive))\n    },\n    matchRoute (to: string) {\n      return to.match(this.group) !== null\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.isActive && this.color, {\n      staticClass: 'v-list-group',\n      class: this.classes,\n    }), [\n      this.genHeader(),\n      h(VExpandTransition, this.genItems()),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}