{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Styles\nimport \"../../../src/components/VInput/VInput.sass\"; // Components\n\nimport VIcon from '../VIcon';\nimport VLabel from '../VLabel';\nimport VMessages from '../VMessages'; // Mixins\n\nimport BindsAttrs from '../../mixins/binds-attrs';\nimport Validatable from '../../mixins/validatable'; // Utilities\n\nimport { convertToUnit, getSlot, kebabCase } from '../../util/helpers';\nimport mergeData from '../../util/mergeData';\nimport mixins from '../../util/mixins';\nvar baseMixins = mixins(BindsAttrs, Validatable);\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-input',\n  inheritAttrs: false,\n  props: {\n    appendIcon: String,\n    backgroundColor: {\n      type: String,\n      \"default\": ''\n    },\n    dense: Boolean,\n    height: [Number, String],\n    hideDetails: [Boolean, String],\n    hideSpinButtons: Boolean,\n    hint: String,\n    id: String,\n    label: String,\n    loading: Boolean,\n    persistentHint: Boolean,\n    prependIcon: String,\n    value: null\n  },\n  data: function data() {\n    return {\n      lazyValue: this.value,\n      hasMouseDown: false\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({\n        'v-input--has-state': this.hasState,\n        'v-input--hide-details': !this.showDetails,\n        'v-input--is-label-active': this.isLabelActive,\n        'v-input--is-dirty': this.isDirty,\n        'v-input--is-disabled': this.isDisabled,\n        'v-input--is-focused': this.isFocused,\n        // <v-switch loading>.loading === '' so we can't just cast to boolean\n        'v-input--is-loading': this.loading !== false && this.loading != null,\n        'v-input--is-readonly': this.isReadonly,\n        'v-input--dense': this.dense,\n        'v-input--hide-spin-buttons': this.hideSpinButtons\n      }, this.themeClasses);\n    },\n    computedId: function computedId() {\n      return this.id || \"input-\".concat(this._uid);\n    },\n    hasDetails: function hasDetails() {\n      return this.messagesToDisplay.length > 0;\n    },\n    hasHint: function hasHint() {\n      return !this.hasMessages && !!this.hint && (this.persistentHint || this.isFocused);\n    },\n    hasLabel: function hasLabel() {\n      return !!(this.$slots.label || this.label);\n    },\n    // Proxy for `lazyValue`\n    // This allows an input\n    // to function without\n    // a provided model\n    internalValue: {\n      get: function get() {\n        return this.lazyValue;\n      },\n      set: function set(val) {\n        this.lazyValue = val;\n        this.$emit(this.$_modelEvent, val);\n      }\n    },\n    isDirty: function isDirty() {\n      return !!this.lazyValue;\n    },\n    isLabelActive: function isLabelActive() {\n      return this.isDirty;\n    },\n    messagesToDisplay: function messagesToDisplay() {\n      var _this = this;\n\n      if (this.hasHint) return [this.hint];\n      if (!this.hasMessages) return [];\n      return this.validations.map(function (validation) {\n        if (typeof validation === 'string') return validation;\n        var validationResult = validation(_this.internalValue);\n        return typeof validationResult === 'string' ? validationResult : '';\n      }).filter(function (message) {\n        return message !== '';\n      });\n    },\n    showDetails: function showDetails() {\n      return this.hideDetails === false || this.hideDetails === 'auto' && this.hasDetails;\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.lazyValue = val;\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    // v-radio-group needs to emit a different event\n    // https://github.com/vuetifyjs/vuetify/issues/4752\n    this.$_modelEvent = this.$options.model && this.$options.model.event || 'input';\n  },\n  methods: {\n    genContent: function genContent() {\n      return [this.genPrependSlot(), this.genControl(), this.genAppendSlot()];\n    },\n    genControl: function genControl() {\n      return this.$createElement('div', {\n        staticClass: 'v-input__control',\n        attrs: {\n          title: this.attrs$.title\n        }\n      }, [this.genInputSlot(), this.genMessages()]);\n    },\n    genDefaultSlot: function genDefaultSlot() {\n      return [this.genLabel(), this.$slots[\"default\"]];\n    },\n    genIcon: function genIcon(type, cb) {\n      var _this2 = this;\n\n      var extraData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var icon = this[\"\".concat(type, \"Icon\")];\n      var eventName = \"click:\".concat(kebabCase(type));\n      var hasListener = !!(this.listeners$[eventName] || cb);\n      var data = mergeData({\n        attrs: {\n          'aria-label': hasListener ? kebabCase(type).split('-')[0] + ' icon' : undefined,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          light: this.light\n        },\n        on: !hasListener ? undefined : {\n          click: function click(e) {\n            e.preventDefault();\n            e.stopPropagation();\n\n            _this2.$emit(eventName, e);\n\n            cb && cb(e);\n          },\n          // Container has g event that will\n          // trigger menu open if enclosed\n          mouseup: function mouseup(e) {\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        }\n      }, extraData);\n      return this.$createElement('div', {\n        staticClass: \"v-input__icon\",\n        \"class\": type ? \"v-input__icon--\".concat(kebabCase(type)) : undefined\n      }, [this.$createElement(VIcon, data, icon)]);\n    },\n    genInputSlot: function genInputSlot() {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor, {\n        staticClass: 'v-input__slot',\n        style: {\n          height: convertToUnit(this.height)\n        },\n        on: {\n          click: this.onClick,\n          mousedown: this.onMouseDown,\n          mouseup: this.onMouseUp\n        },\n        ref: 'input-slot'\n      }), [this.genDefaultSlot()]);\n    },\n    genLabel: function genLabel() {\n      if (!this.hasLabel) return null;\n      return this.$createElement(VLabel, {\n        props: {\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: this.hasState,\n          \"for\": this.computedId,\n          light: this.light\n        }\n      }, this.$slots.label || this.label);\n    },\n    genMessages: function genMessages() {\n      var _this3 = this;\n\n      if (!this.showDetails) return null;\n      return this.$createElement(VMessages, {\n        props: {\n          color: this.hasHint ? '' : this.validationState,\n          dark: this.dark,\n          light: this.light,\n          value: this.messagesToDisplay\n        },\n        attrs: {\n          role: this.hasMessages ? 'alert' : null\n        },\n        scopedSlots: {\n          \"default\": function _default(props) {\n            return getSlot(_this3, 'message', props);\n          }\n        }\n      });\n    },\n    genSlot: function genSlot(type, location, slot) {\n      if (!slot.length) return null;\n      var ref = \"\".concat(type, \"-\").concat(location);\n      return this.$createElement('div', {\n        staticClass: \"v-input__\".concat(ref),\n        ref: ref\n      }, slot);\n    },\n    genPrependSlot: function genPrependSlot() {\n      var slot = [];\n\n      if (this.$slots.prepend) {\n        slot.push(this.$slots.prepend);\n      } else if (this.prependIcon) {\n        slot.push(this.genIcon('prepend'));\n      }\n\n      return this.genSlot('prepend', 'outer', slot);\n    },\n    genAppendSlot: function genAppendSlot() {\n      var slot = []; // Append icon for text field was really\n      // an appended inner icon, v-text-field\n      // will overwrite this method in order to obtain\n      // backwards compat\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append);\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'));\n      }\n\n      return this.genSlot('append', 'outer', slot);\n    },\n    onClick: function onClick(e) {\n      this.$emit('click', e);\n    },\n    onMouseDown: function onMouseDown(e) {\n      this.hasMouseDown = true;\n      this.$emit('mousedown', e);\n    },\n    onMouseUp: function onMouseUp(e) {\n      this.hasMouseDown = false;\n      this.$emit('mouseup', e);\n    }\n  },\n  render: function render(h) {\n    return h('div', this.setTextColor(this.validationState, {\n      staticClass: 'v-input',\n      \"class\": this.classes\n    }), this.genContent());\n  }\n});","map":{"version":3,"mappings":"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","names":["VIcon","VLabel","VMessages","BindsAttrs","Validatable","convertToUnit","getSlot","kebabCase","mergeData","mixins","baseMixins","extend","name","inheritAttrs","props","appendIcon","String","backgroundColor","type","dense","Boolean","height","Number","hideDetails","hideSpinButtons","hint","id","label","loading","persistentHint","prependIcon","value","data","lazyValue","hasMouseDown","computed","classes","hasState","showDetails","isLabelActive","isDirty","isDisabled","isFocused","isReadonly","themeClasses","computedId","_uid","hasDetails","messagesToDisplay","length","hasHint","hasMessages","hasLabel","$slots","internalValue","get","set","val","$emit","$_modelEvent","validations","map","validation","validationResult","filter","message","watch","beforeCreate","$options","model","event","methods","genContent","genPrependSlot","genControl","genAppendSlot","$createElement","staticClass","attrs","title","attrs$","genInputSlot","genMessages","genDefaultSlot","genLabel","genIcon","cb","extraData","icon","eventName","hasListener","listeners$","split","undefined","color","validationState","dark","disabled","light","on","click","e","preventDefault","stopPropagation","mouseup","setBackgroundColor","style","onClick","mousedown","onMouseDown","onMouseUp","ref","focused","role","scopedSlots","genSlot","location","slot","prepend","push","append","render","h","setTextColor"],"sourceRoot":"","sources":["../../../src/components/VInput/VInput.ts"],"sourcesContent":["// Styles\nimport './VInput.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VLabel from '../VLabel'\nimport VMessages from '../VMessages'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Validatable from '../../mixins/validatable'\n\n// Utilities\nimport {\n  convertToUnit,\n  getSlot,\n  kebabCase,\n} from '../../util/helpers'\nimport mergeData from '../../util/mergeData'\n\n// Types\nimport { VNode, VNodeData, PropType } from 'vue'\nimport mixins from '../../util/mixins'\nimport { InputValidationRule } from 'vuetify/types'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Validatable,\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  /* eslint-disable-next-line camelcase */\n  $_modelEvent: string\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-input',\n\n  inheritAttrs: false,\n\n  props: {\n    appendIcon: String,\n    backgroundColor: {\n      type: String,\n      default: '',\n    },\n    dense: Boolean,\n    height: [Number, String],\n    hideDetails: [Boolean, String] as PropType<boolean | 'auto'>,\n    hideSpinButtons: Boolean,\n    hint: String,\n    id: String,\n    label: String,\n    loading: Boolean,\n    persistentHint: Boolean,\n    prependIcon: String,\n    value: null as any as PropType<any>,\n  },\n\n  data () {\n    return {\n      lazyValue: this.value,\n      hasMouseDown: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-input--has-state': this.hasState,\n        'v-input--hide-details': !this.showDetails,\n        'v-input--is-label-active': this.isLabelActive,\n        'v-input--is-dirty': this.isDirty,\n        'v-input--is-disabled': this.isDisabled,\n        'v-input--is-focused': this.isFocused,\n        // <v-switch loading>.loading === '' so we can't just cast to boolean\n        'v-input--is-loading': this.loading !== false && this.loading != null,\n        'v-input--is-readonly': this.isReadonly,\n        'v-input--dense': this.dense,\n        'v-input--hide-spin-buttons': this.hideSpinButtons,\n        ...this.themeClasses,\n      }\n    },\n    computedId (): string {\n      return this.id || `input-${this._uid}`\n    },\n    hasDetails (): boolean {\n      return this.messagesToDisplay.length > 0\n    },\n    hasHint (): boolean {\n      return !this.hasMessages &&\n        !!this.hint &&\n        (this.persistentHint || this.isFocused)\n    },\n    hasLabel (): boolean {\n      return !!(this.$slots.label || this.label)\n    },\n    // Proxy for `lazyValue`\n    // This allows an input\n    // to function without\n    // a provided model\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit(this.$_modelEvent, val)\n      },\n    },\n    isDirty (): boolean {\n      return !!this.lazyValue\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    messagesToDisplay (): string[] {\n      if (this.hasHint) return [this.hint]\n\n      if (!this.hasMessages) return []\n\n      return this.validations.map((validation: string | InputValidationRule) => {\n        if (typeof validation === 'string') return validation\n\n        const validationResult = validation(this.internalValue)\n\n        return typeof validationResult === 'string' ? validationResult : ''\n      }).filter(message => message !== '')\n    },\n    showDetails (): boolean {\n      return this.hideDetails === false || (this.hideDetails === 'auto' && this.hasDetails)\n    },\n  },\n\n  watch: {\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  beforeCreate () {\n    // v-radio-group needs to emit a different event\n    // https://github.com/vuetifyjs/vuetify/issues/4752\n    this.$_modelEvent = (this.$options.model && this.$options.model.event) || 'input'\n  },\n\n  methods: {\n    genContent () {\n      return [\n        this.genPrependSlot(),\n        this.genControl(),\n        this.genAppendSlot(),\n      ]\n    },\n    genControl () {\n      return this.$createElement('div', {\n        staticClass: 'v-input__control',\n        attrs: { title: this.attrs$.title },\n      }, [\n        this.genInputSlot(),\n        this.genMessages(),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genLabel(),\n        this.$slots.default,\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData: VNodeData = {}\n    ) {\n      const icon = (this as any)[`${type}Icon`]\n      const eventName = `click:${kebabCase(type)}`\n      const hasListener = !!(this.listeners$[eventName] || cb)\n\n      const data = mergeData({\n        attrs: {\n          'aria-label': hasListener ? kebabCase(type).split('-')[0] + ' icon' : undefined,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          light: this.light,\n        },\n        on: !hasListener\n          ? undefined\n          : {\n            click: (e: Event) => {\n              e.preventDefault()\n              e.stopPropagation()\n\n              this.$emit(eventName, e)\n              cb && cb(e)\n            },\n            // Container has g event that will\n            // trigger menu open if enclosed\n            mouseup: (e: Event) => {\n              e.preventDefault()\n              e.stopPropagation()\n            },\n          },\n      }, extraData)\n\n      return this.$createElement('div', {\n        staticClass: `v-input__icon`,\n        class: type ? `v-input__icon--${kebabCase(type)}` : undefined,\n      }, [\n        this.$createElement(\n          VIcon,\n          data,\n          icon\n        ),\n      ])\n    },\n    genInputSlot () {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor, {\n        staticClass: 'v-input__slot',\n        style: { height: convertToUnit(this.height) },\n        on: {\n          click: this.onClick,\n          mousedown: this.onMouseDown,\n          mouseup: this.onMouseUp,\n        },\n        ref: 'input-slot',\n      }), [this.genDefaultSlot()])\n    },\n    genLabel () {\n      if (!this.hasLabel) return null\n\n      return this.$createElement(VLabel, {\n        props: {\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: this.hasState,\n          for: this.computedId,\n          light: this.light,\n        },\n      }, this.$slots.label || this.label)\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      return this.$createElement(VMessages, {\n        props: {\n          color: this.hasHint ? '' : this.validationState,\n          dark: this.dark,\n          light: this.light,\n          value: this.messagesToDisplay,\n        },\n        attrs: {\n          role: this.hasMessages ? 'alert' : null,\n        },\n        scopedSlots: {\n          default: props => getSlot(this, 'message', props),\n        },\n      })\n    },\n    genSlot (\n      type: string,\n      location: string,\n      slot: (VNode | VNode[])[]\n    ) {\n      if (!slot.length) return null\n\n      const ref = `${type}-${location}`\n\n      return this.$createElement('div', {\n        staticClass: `v-input__${ref}`,\n        ref,\n      }, slot)\n    },\n    genPrependSlot () {\n      const slot = []\n\n      if (this.$slots.prepend) {\n        slot.push(this.$slots.prepend)\n      } else if (this.prependIcon) {\n        slot.push(this.genIcon('prepend'))\n      }\n\n      return this.genSlot('prepend', 'outer', slot)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      // Append icon for text field was really\n      // an appended inner icon, v-text-field\n      // will overwrite this method in order to obtain\n      // backwards compat\n      if (this.$slots.append) {\n        slot.push(this.$slots.append)\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    onClick (e: Event) {\n      this.$emit('click', e)\n    },\n    onMouseDown (e: Event) {\n      this.hasMouseDown = true\n      this.$emit('mousedown', e)\n    },\n    onMouseUp (e: Event) {\n      this.hasMouseDown = false\n      this.$emit('mouseup', e)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.validationState, {\n      staticClass: 'v-input',\n      class: this.classes,\n    }), this.genContent())\n  },\n})\n"]},"metadata":{},"sourceType":"module"}