{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n// Styles\nimport \"../../../src/components/VImg/VImg.sass\"; // Directives\n\nimport intersect from '../../directives/intersect'; // Components\n\nimport VResponsive from '../VResponsive'; // Mixins\n\nimport Themeable from '../../mixins/themeable'; // Utils\n\nimport mixins from '../../util/mixins';\nimport mergeData from '../../util/mergeData';\nimport { consoleWarn } from '../../util/console';\nvar hasIntersect = typeof window !== 'undefined' && 'IntersectionObserver' in window;\n/* @vue/component */\n\nexport default mixins(VResponsive, Themeable).extend({\n  name: 'v-img',\n  directives: {\n    intersect: intersect\n  },\n  props: {\n    alt: String,\n    contain: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      \"default\": function _default() {\n        return {\n          root: undefined,\n          rootMargin: undefined,\n          threshold: undefined\n        };\n      }\n    },\n    position: {\n      type: String,\n      \"default\": 'center center'\n    },\n    sizes: String,\n    src: {\n      type: [String, Object],\n      \"default\": ''\n    },\n    srcset: String,\n    transition: {\n      type: [Boolean, String],\n      \"default\": 'fade-transition'\n    }\n  },\n  data: function data() {\n    return {\n      currentSrc: '',\n      image: null,\n      isLoading: true,\n      calculatedAspectRatio: undefined,\n      naturalWidth: undefined,\n      hasError: false\n    };\n  },\n  computed: {\n    computedAspectRatio: function computedAspectRatio() {\n      return Number(this.normalisedSrc.aspect || this.calculatedAspectRatio);\n    },\n    normalisedSrc: function normalisedSrc() {\n      return this.src && _typeof(this.src) === 'object' ? {\n        src: this.src.src,\n        srcset: this.srcset || this.src.srcset,\n        lazySrc: this.lazySrc || this.src.lazySrc,\n        aspect: Number(this.aspectRatio || this.src.aspect)\n      } : {\n        src: this.src,\n        srcset: this.srcset,\n        lazySrc: this.lazySrc,\n        aspect: Number(this.aspectRatio || 0)\n      };\n    },\n    __cachedImage: function __cachedImage() {\n      if (!(this.normalisedSrc.src || this.normalisedSrc.lazySrc || this.gradient)) return [];\n      var backgroundImage = [];\n      var src = this.isLoading ? this.normalisedSrc.lazySrc : this.currentSrc;\n      if (this.gradient) backgroundImage.push(\"linear-gradient(\".concat(this.gradient, \")\"));\n      if (src) backgroundImage.push(\"url(\\\"\".concat(src, \"\\\")\"));\n      var image = this.$createElement('div', {\n        staticClass: 'v-image__image',\n        \"class\": {\n          'v-image__image--preload': this.isLoading,\n          'v-image__image--contain': this.contain,\n          'v-image__image--cover': !this.contain\n        },\n        style: {\n          backgroundImage: backgroundImage.join(', '),\n          backgroundPosition: this.position\n        },\n        key: +this.isLoading\n      });\n      /* istanbul ignore if */\n\n      if (!this.transition) return image;\n      return this.$createElement('transition', {\n        attrs: {\n          name: this.transition,\n          mode: 'in-out'\n        }\n      }, [image]);\n    }\n  },\n  watch: {\n    src: function src() {\n      // Force re-init when src changes\n      if (!this.isLoading) this.init(undefined, undefined, true);else this.loadImage();\n    },\n    '$vuetify.breakpoint.width': 'getSrc'\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init(entries, observer, isIntersecting) {\n      // If the current browser supports the intersection\n      // observer api, the image is not observable, and\n      // the eager prop isn't being used, do not load\n      if (hasIntersect && !isIntersecting && !this.eager) return;\n\n      if (this.normalisedSrc.lazySrc) {\n        var lazyImg = new Image();\n        lazyImg.src = this.normalisedSrc.lazySrc;\n        this.pollForSize(lazyImg, null);\n      }\n      /* istanbul ignore else */\n\n\n      if (this.normalisedSrc.src) this.loadImage();\n    },\n    onLoad: function onLoad() {\n      this.getSrc();\n      this.isLoading = false;\n      this.$emit('load', this.src);\n\n      if (this.image && (this.normalisedSrc.src.endsWith('.svg') || this.normalisedSrc.src.startsWith('data:image/svg+xml'))) {\n        if (this.image.naturalHeight && this.image.naturalWidth) {\n          this.naturalWidth = this.image.naturalWidth;\n          this.calculatedAspectRatio = this.image.naturalWidth / this.image.naturalHeight;\n        } else {\n          this.calculatedAspectRatio = 1;\n        }\n      }\n    },\n    onError: function onError() {\n      this.hasError = true;\n      this.$emit('error', this.src);\n    },\n    getSrc: function getSrc() {\n      /* istanbul ignore else */\n      if (this.image) this.currentSrc = this.image.currentSrc || this.image.src;\n    },\n    loadImage: function loadImage() {\n      var _this = this;\n\n      var image = new Image();\n      this.image = image;\n\n      image.onload = function () {\n        /* istanbul ignore if */\n        if (image.decode) {\n          image.decode()[\"catch\"](function (err) {\n            consoleWarn(\"Failed to decode image, trying to render anyway\\n\\n\" + \"src: \".concat(_this.normalisedSrc.src) + (err.message ? \"\\nOriginal error: \".concat(err.message) : ''), _this);\n          }).then(_this.onLoad);\n        } else {\n          _this.onLoad();\n        }\n      };\n\n      image.onerror = this.onError;\n      this.hasError = false;\n      this.sizes && (image.sizes = this.sizes);\n      this.normalisedSrc.srcset && (image.srcset = this.normalisedSrc.srcset);\n      image.src = this.normalisedSrc.src;\n      this.$emit('loadstart', this.normalisedSrc.src);\n      this.aspectRatio || this.pollForSize(image);\n      this.getSrc();\n    },\n    pollForSize: function pollForSize(img) {\n      var _this2 = this;\n\n      var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      var poll = function poll() {\n        var naturalHeight = img.naturalHeight,\n            naturalWidth = img.naturalWidth;\n\n        if (naturalHeight || naturalWidth) {\n          _this2.naturalWidth = naturalWidth;\n          _this2.calculatedAspectRatio = naturalWidth / naturalHeight;\n        } else if (!img.complete && _this2.isLoading && !_this2.hasError && timeout != null) {\n          setTimeout(poll, timeout);\n        }\n      };\n\n      poll();\n    },\n    genContent: function genContent() {\n      var content = VResponsive.options.methods.genContent.call(this);\n\n      if (this.naturalWidth) {\n        this._b(content.data, 'div', {\n          style: {\n            width: \"\".concat(this.naturalWidth, \"px\")\n          }\n        });\n      }\n\n      return content;\n    },\n    __genPlaceholder: function __genPlaceholder() {\n      if (this.$slots.placeholder) {\n        var placeholder = this.isLoading ? [this.$createElement('div', {\n          staticClass: 'v-image__placeholder'\n        }, this.$slots.placeholder)] : [];\n        if (!this.transition) return placeholder[0];\n        return this.$createElement('transition', {\n          props: {\n            appear: true,\n            name: this.transition\n          }\n        }, placeholder);\n      }\n    }\n  },\n  render: function render(h) {\n    var node = VResponsive.options.render.call(this, h);\n    var data = mergeData(node.data, {\n      staticClass: 'v-image',\n      attrs: {\n        'aria-label': this.alt,\n        role: this.alt ? 'img' : undefined\n      },\n      \"class\": this.themeClasses,\n      // Only load intersect directive if it\n      // will work in the current browser.\n      directives: hasIntersect ? [{\n        name: 'intersect',\n        modifiers: {\n          once: true\n        },\n        value: {\n          handler: this.init,\n          options: this.options\n        }\n      }] : undefined\n    });\n    node.children = [this.__cachedSizer, this.__cachedImage, this.__genPlaceholder(), this.genContent()];\n    return h(node.tag, data, node.children);\n  }\n});","map":{"version":3,"mappings":"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","names":["intersect","VResponsive","Themeable","mixins","mergeData","consoleWarn","hasIntersect","window","extend","name","directives","props","alt","String","contain","Boolean","eager","gradient","lazySrc","options","type","Object","root","undefined","rootMargin","threshold","position","sizes","src","srcset","transition","data","currentSrc","image","isLoading","calculatedAspectRatio","naturalWidth","hasError","computed","computedAspectRatio","Number","normalisedSrc","aspect","aspectRatio","__cachedImage","backgroundImage","push","$createElement","staticClass","style","join","backgroundPosition","key","attrs","mode","watch","init","loadImage","mounted","methods","entries","observer","isIntersecting","lazyImg","Image","pollForSize","onLoad","getSrc","$emit","endsWith","startsWith","naturalHeight","onError","onload","decode","err","message","then","onerror","img","timeout","poll","complete","setTimeout","genContent","content","call","_b","width","__genPlaceholder","$slots","placeholder","appear","render","h","node","role","themeClasses","modifiers","once","value","handler","children","__cachedSizer","tag"],"sourceRoot":"","sources":["../../../src/components/VImg/VImg.ts"],"sourcesContent":["// Styles\nimport './VImg.sass'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport VResponsive from '../VResponsive'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport mixins from '../../util/mixins'\nimport mergeData from '../../util/mergeData'\nimport { consoleWarn } from '../../util/console'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src: string\n  srcset?: string\n  lazySrc: string\n  aspect: number\n}\n\nconst hasIntersect = typeof window !== 'undefined' && 'IntersectionObserver' in window\n\n/* @vue/component */\nexport default mixins(\n  VResponsive,\n  Themeable,\n).extend({\n  name: 'v-img',\n\n  directives: { intersect },\n\n  props: {\n    alt: String,\n    contain: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    } as PropValidator<IntersectionObserverInit>,\n    position: {\n      type: String,\n      default: 'center center',\n    },\n    sizes: String,\n    src: {\n      type: [String, Object],\n      default: '',\n    } as PropValidator<string | srcObject>,\n    srcset: String,\n    transition: {\n      type: [Boolean, String],\n      default: 'fade-transition',\n    },\n  },\n\n  data () {\n    return {\n      currentSrc: '', // Set from srcset\n      image: null as HTMLImageElement | null,\n      isLoading: true,\n      calculatedAspectRatio: undefined as number | undefined,\n      naturalWidth: undefined as number | undefined,\n      hasError: false,\n    }\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.normalisedSrc.aspect || this.calculatedAspectRatio)\n    },\n    normalisedSrc (): srcObject {\n      return this.src && typeof this.src === 'object'\n        ? {\n          src: this.src.src,\n          srcset: this.srcset || this.src.srcset,\n          lazySrc: this.lazySrc || this.src.lazySrc,\n          aspect: Number(this.aspectRatio || this.src.aspect),\n        } : {\n          src: this.src,\n          srcset: this.srcset,\n          lazySrc: this.lazySrc,\n          aspect: Number(this.aspectRatio || 0),\n        }\n    },\n    __cachedImage (): VNode | [] {\n      if (!(this.normalisedSrc.src || this.normalisedSrc.lazySrc || this.gradient)) return []\n\n      const backgroundImage: string[] = []\n      const src = this.isLoading ? this.normalisedSrc.lazySrc : this.currentSrc\n\n      if (this.gradient) backgroundImage.push(`linear-gradient(${this.gradient})`)\n      if (src) backgroundImage.push(`url(\"${src}\")`)\n\n      const image = this.$createElement('div', {\n        staticClass: 'v-image__image',\n        class: {\n          'v-image__image--preload': this.isLoading,\n          'v-image__image--contain': this.contain,\n          'v-image__image--cover': !this.contain,\n        },\n        style: {\n          backgroundImage: backgroundImage.join(', '),\n          backgroundPosition: this.position,\n        },\n        key: +this.isLoading,\n      })\n\n      /* istanbul ignore if */\n      if (!this.transition) return image\n\n      return this.$createElement('transition', {\n        attrs: {\n          name: this.transition,\n          mode: 'in-out',\n        },\n      }, [image])\n    },\n  },\n\n  watch: {\n    src () {\n      // Force re-init when src changes\n      if (!this.isLoading) this.init(undefined, undefined, true)\n      else this.loadImage()\n    },\n    '$vuetify.breakpoint.width': 'getSrc',\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init (\n      entries?: IntersectionObserverEntry[],\n      observer?: IntersectionObserver,\n      isIntersecting?: boolean\n    ) {\n      // If the current browser supports the intersection\n      // observer api, the image is not observable, and\n      // the eager prop isn't being used, do not load\n      if (\n        hasIntersect &&\n        !isIntersecting &&\n        !this.eager\n      ) return\n\n      if (this.normalisedSrc.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = this.normalisedSrc.lazySrc\n        this.pollForSize(lazyImg, null)\n      }\n      /* istanbul ignore else */\n      if (this.normalisedSrc.src) this.loadImage()\n    },\n    onLoad () {\n      this.getSrc()\n      this.isLoading = false\n      this.$emit('load', this.src)\n\n      if (\n        this.image &&\n        (this.normalisedSrc.src.endsWith('.svg') || this.normalisedSrc.src.startsWith('data:image/svg+xml'))\n      ) {\n        if (this.image.naturalHeight && this.image.naturalWidth) {\n          this.naturalWidth = this.image.naturalWidth\n          this.calculatedAspectRatio = this.image.naturalWidth / this.image.naturalHeight\n        } else {\n          this.calculatedAspectRatio = 1\n        }\n      }\n    },\n    onError () {\n      this.hasError = true\n      this.$emit('error', this.src)\n    },\n    getSrc () {\n      /* istanbul ignore else */\n      if (this.image) this.currentSrc = this.image.currentSrc || this.image.src\n    },\n    loadImage () {\n      const image = new Image()\n      this.image = image\n\n      image.onload = () => {\n        /* istanbul ignore if */\n        if (image.decode) {\n          image.decode().catch((err: DOMException) => {\n            consoleWarn(\n              `Failed to decode image, trying to render anyway\\n\\n` +\n              `src: ${this.normalisedSrc.src}` +\n              (err.message ? `\\nOriginal error: ${err.message}` : ''),\n              this\n            )\n          }).then(this.onLoad)\n        } else {\n          this.onLoad()\n        }\n      }\n      image.onerror = this.onError\n\n      this.hasError = false\n      this.sizes && (image.sizes = this.sizes)\n      this.normalisedSrc.srcset && (image.srcset = this.normalisedSrc.srcset)\n      image.src = this.normalisedSrc.src\n      this.$emit('loadstart', this.normalisedSrc.src)\n\n      this.aspectRatio || this.pollForSize(image)\n      this.getSrc()\n    },\n    pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight, naturalWidth } = img\n\n        if (naturalHeight || naturalWidth) {\n          this.naturalWidth = naturalWidth\n          this.calculatedAspectRatio = naturalWidth / naturalHeight\n        } else if (!img.complete && this.isLoading && !this.hasError && timeout != null) {\n          setTimeout(poll, timeout)\n        }\n      }\n\n      poll()\n    },\n    genContent () {\n      const content: VNode = VResponsive.options.methods.genContent.call(this)\n      if (this.naturalWidth) {\n        this._b(content.data!, 'div', {\n          style: { width: `${this.naturalWidth}px` },\n        })\n      }\n\n      return content\n    },\n    __genPlaceholder (): VNode | void {\n      if (this.$slots.placeholder) {\n        const placeholder = this.isLoading\n          ? [this.$createElement('div', {\n            staticClass: 'v-image__placeholder',\n          }, this.$slots.placeholder)]\n          : []\n\n        if (!this.transition) return placeholder[0]\n\n        return this.$createElement('transition', {\n          props: {\n            appear: true,\n            name: this.transition,\n          },\n        }, placeholder)\n      }\n    },\n  },\n\n  render (h): VNode {\n    const node = VResponsive.options.render.call(this, h)\n\n    const data = mergeData(node.data!, {\n      staticClass: 'v-image',\n      attrs: {\n        'aria-label': this.alt,\n        role: this.alt ? 'img' : undefined,\n      },\n      class: this.themeClasses,\n      // Only load intersect directive if it\n      // will work in the current browser.\n      directives: hasIntersect\n        ? [{\n          name: 'intersect',\n          modifiers: { once: true },\n          value: {\n            handler: this.init,\n            options: this.options,\n          },\n        }]\n        : undefined,\n    })\n\n    node.children = [\n      this.__cachedSizer,\n      this.__cachedImage,\n      this.__genPlaceholder(),\n      this.genContent(),\n    ] as VNode[]\n\n    return h(node.tag, data, node.children)\n  },\n})\n"]},"metadata":{},"sourceType":"module"}