{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Michael\\\\Documents\\\\School\\\\ITSC4155\\\\CocktailCrafts\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { computed } from '@vue/runtime-core';\nimport IngredientSearch from '../components/IngredientSearch.vue';\nimport NameSearch from '../components/NameSearch.vue';\nimport router from '../router/index';\n\nvar axios = require('axios');\n\nfunction preprocessApiDrinks(drinkArr) {\n  var finalDrinkArr = [];\n\n  for (var i = 0; i < drinkArr.length; i++) {\n    var ingredients = [];\n    var j = 1;\n\n    do {\n      var ingredientString = \"\";\n\n      if (drinkArr[i][\"strMeasure\" + j] != null) {\n        ingredientString = drinkArr[i][\"strMeasure\" + j] + \" \" + drinkArr[i][\"strIngredient\" + j];\n      } else {\n        ingredientString = drinkArr[i][\"strIngredient\" + j];\n      }\n\n      ingredients.push(ingredientString);\n      j++;\n    } while (drinkArr[i][\"strIngredient\" + j] != null && drinkArr[i][\"strIngredient\" + j] != \"\");\n\n    finalDrinkArr.push({\n      dName: drinkArr[i][\"strDrink\"],\n      category: drinkArr[i][\"strCategory\"],\n      dIngredients: ingredients,\n      id: drinkArr[i][\"idDrink\"],\n      img: drinkArr[i][\"strDrinkThumb\"],\n      instructions: drinkArr[i][\"strInstructions\"]\n    });\n  }\n\n  return finalDrinkArr;\n}\n\nexport default {\n  components: {\n    IngredientSearch: IngredientSearch,\n    NameSearch: NameSearch\n  },\n  data: function data() {\n    return {\n      curComps: [NameSearch, IngredientSearch],\n      selected: 0,\n      apiHeaders: [{\n        text: \"Drink Name\",\n        align: \"start\",\n        value: \"dName\"\n      }, {\n        text: \"Category\",\n        value: \"category\"\n      }, {\n        text: \"Ingredients\",\n        value: \"dIngredients\"\n      }],\n      apiDrinkList: [],\n      tableLoading: true\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('/api/populate').then(function (response) {\n                _this.apiDrinkList = preprocessApiDrinks(response.data.drinks);\n                _this.tableLoading = false;\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    rowClicked: function rowClicked(value, info) {\n      router.push({\n        name: 'recipe',\n        params: {\n          id: value.id\n        }\n      });\n    },\n    onNameSearch: function onNameSearch(search) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.tableLoading = true;\n                _context2.next = 3;\n                return axios.get(\"/api/namesearch\", {\n                  params: {\n                    name: search\n                  }\n                }).then(function (response) {\n                  if (response.data.drinks) _this2.apiDrinkList = preprocessApiDrinks(response.data.drinks);else _this2.apiDrinkList = [];\n                  _this2.tableLoading = false;\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;;AACA;;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACAA;AACA,OAFA,MAEA;AACAA;AACA;;AACAC;AACAC;AACA,KATA,QASAC,kFATA;;AAUAC;AAAAC;AACAC,0CADA;AAEAC,+BAFA;AAGAC,gCAHA;AAIAC,uCAJA;AAKAC;AALA;AAMA;;AACA;AACA;;AACA;AAEAC;AACAC,sCADA;AAEAC;AAFA,GAFA;AAOAC,MAPA,kBAOA;AACA;AACAC,8CADA;AAEAC,iBAFA;AAGAC;AAAAC;AAAAC;AAAAC;AAAA,SACA;AAAAF;AAAAE;AAAA,OADA,EAEA;AAAAF;AAAAE;AAAA,OAFA,CAHA;AAMAC,sBANA;AAOAC;AAPA;AASA,GAjBA;AAkBAC,SAlBA,qBAkBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACAC,2BACAC,IADA,CACA;AACA;AACA;AACA,eAJA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,GAxBA;AAyBAC;AACAC,cADA,sBACAP,KADA,EACAQ,IADA,EACA;AACAC;AAAAC;AAAAC;AAAAvB;AAAA;AAAA;AACA,KAHA;AAIAwB,gBAJA,wBAIAC,MAJA,EAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA,uBAEAT;AAAAO;AAAAD;AAAA;AAAA,mBACAL,IADA,CACA;AACA,4CACA,gEADA,KAGA;AACA;AACA,iBAPA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAdA;AAzBA","names":["ingredientString","ingredients","j","drinkArr","finalDrinkArr","dName","category","dIngredients","id","img","instructions","components","IngredientSearch","NameSearch","data","curComps","selected","apiHeaders","text","align","value","apiDrinkList","tableLoading","created","axios","then","methods","rowClicked","info","router","name","params","onNameSearch","search"],"sourceRoot":"src/views","sources":["SearchBar.vue"],"sourcesContent":["<template>\r\n    <v-app>\r\n        <v-container grid-list-lg fill-width fluid>\r\n            <v-row justify=\"center\">\r\n                <h1>Search</h1>\r\n            </v-row>\r\n            <v-row justify=\"center\">\r\n                <v-col>\r\n                    <v-tabs centered v-model=\"selected\">\r\n                        <v-tab>Search by Drink Name</v-tab>\r\n                        <v-tab>Search by Ingredients</v-tab>\r\n                    </v-tabs>\r\n                </v-col>\r\n            </v-row>\r\n            <v-scroll-x-reverse-transition v-if=\"selected == 0\" mode=\"in\" :hide-on-leave=\"true\">\r\n                <component :is=\"curComps[selected]\" @nameSearch=\"onNameSearch\"/>\r\n            </v-scroll-x-reverse-transition>\r\n            <v-scroll-x-transition v-else mode=\"in\" :hide-on-leave=\"true\">\r\n                <component :is=\"curComps[selected]\" @nameSearch=\"onNameSearch\"/>\r\n            </v-scroll-x-transition>\r\n            <v-row justify=\"center\">\r\n                <v-col>\r\n                    <v-data-table\r\n                        :headers=\"apiHeaders\"\r\n                        :items=\"apiDrinkList\"\r\n                        class=\"elevation-1 mx-16\"\r\n                        :loading=\"tableLoading\"\r\n                        loading-text=\"Loading Drinks...\"\r\n                        @click:row=\"rowClicked\"\r\n                        no-data-text=\"No Drinks Found That Match Selected Criteria\"\r\n                    >\r\n                    <template v-slot:item.dName=\"{item}\">\r\n                        <tr>\r\n                            <td>\r\n                                <v-img max-height=\"128\" max-width=\"128\" class=\"mr-6 rounded-circle\" contain :src=\"item.img\" lazy-src=\"https://reactnative-examples.com/wp-content/uploads/2022/02/default-loading-image.png\"/>\r\n                            </td>\r\n                            <td class=\"ml-4\">{{item.dName}}</td>\r\n                        </tr>\r\n                    </template>\r\n                    <template v-slot:item.dIngredients=\"{item}\">\r\n                        <v-list>\r\n                            <v-list-item v-for=\"i in item.dIngredients\" :key=\"i\">{{i}}</v-list-item>\r\n                        </v-list>\r\n                    </template>\r\n                    </v-data-table>\r\n                </v-col>\r\n            </v-row>\r\n        </v-container>\r\n    </v-app>\r\n</template>\r\n\r\n<script>\r\nimport { computed } from '@vue/runtime-core'\r\nimport IngredientSearch from '../components/IngredientSearch.vue'\r\nimport NameSearch from '../components/NameSearch.vue'\r\nimport router from '../router/index'\r\nconst axios = require('axios')\r\n\r\nfunction preprocessApiDrinks(drinkArr){\r\n    let finalDrinkArr = []\r\n    for(let i = 0; i < drinkArr.length; i++){\r\n        let ingredients = []\r\n        let j = 1\r\n        do {\r\n            let ingredientString = \"\"\r\n            if (drinkArr[i][\"strMeasure\" + j] != null){\r\n                ingredientString = drinkArr[i][\"strMeasure\" + j] + \" \" + drinkArr[i][\"strIngredient\" + j]\r\n            } else {\r\n                ingredientString = drinkArr[i][\"strIngredient\" + j]\r\n            }\r\n            ingredients.push(ingredientString)\r\n            j++\r\n        }while(drinkArr[i][\"strIngredient\" + j] != null && drinkArr[i][\"strIngredient\" + j] != \"\")\r\n        finalDrinkArr.push({dName: drinkArr[i][\"strDrink\"],\r\n                            category: drinkArr[i][\"strCategory\"], \r\n                            dIngredients: ingredients, \r\n                            id: drinkArr[i][\"idDrink\"],\r\n                            img: drinkArr[i][\"strDrinkThumb\"],\r\n                            instructions: drinkArr[i][\"strInstructions\"]})\r\n    }\r\n    return finalDrinkArr\r\n}\r\nexport default  {\r\n    \r\n    components: {\r\n        IngredientSearch,\r\n        NameSearch\r\n    },\r\n\r\n    data() {\r\n        return {  \r\n            curComps: [NameSearch, IngredientSearch],\r\n            selected: 0,\r\n            apiHeaders: [{text: \"Drink Name\", align: \"start\", value: \"dName\"},\r\n                        {text: \"Category\", value: \"category\"},\r\n                        {text: \"Ingredients\", value: \"dIngredients\"}],\r\n            apiDrinkList: [],\r\n            tableLoading: true\r\n        }\r\n    },\r\n    async created() {\r\n        await axios.get('/api/populate')\r\n            .then(response => {\r\n                    this.apiDrinkList = preprocessApiDrinks(response.data.drinks)\r\n                    this.tableLoading = false\r\n                })\r\n    },\r\n    methods: {\r\n        rowClicked(value, info){\r\n            router.push({name: 'recipe', params: { id: value.id } })\r\n        },\r\n        async onNameSearch(search){\r\n            this.tableLoading = true\r\n            await axios.get(\"/api/namesearch\", {params: {name: search}})\r\n            .then(response => {\r\n                if(response.data.drinks)\r\n                    this.apiDrinkList = preprocessApiDrinks(response.data.drinks)\r\n                else\r\n                    this.apiDrinkList = []\r\n                this.tableLoading = false\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.v-list {\r\n    background: none\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}