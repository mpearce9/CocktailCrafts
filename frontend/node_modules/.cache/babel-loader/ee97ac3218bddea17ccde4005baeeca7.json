{"ast":null,"code":"function inserted(el, binding, vnode) {\n  var callback = binding.value;\n  var options = binding.options || {\n    passive: true\n  };\n  window.addEventListener('resize', callback, options);\n  el._onResize = Object(el._onResize);\n  el._onResize[vnode.context._uid] = {\n    callback: callback,\n    options: options\n  };\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback();\n  }\n}\n\nfunction unbind(el, binding, vnode) {\n  var _el$_onResize;\n\n  if (!((_el$_onResize = el._onResize) != null && _el$_onResize[vnode.context._uid])) return;\n  var _el$_onResize$vnode$c = el._onResize[vnode.context._uid],\n      callback = _el$_onResize$vnode$c.callback,\n      options = _el$_onResize$vnode$c.options;\n  window.removeEventListener('resize', callback, options);\n  delete el._onResize[vnode.context._uid];\n}\n\nexport var Resize = {\n  inserted: inserted,\n  unbind: unbind\n};\nexport default Resize;","map":{"version":3,"mappings":"AAQA,SAASA,QAAT,CAAmBC,EAAnB,EAAoCC,OAApC,EAAmEC,KAAnE,EAA+E;AAC7E,MAAMC,QAAQ,GAAGF,OAAO,CAACG,KAAzB;AACA,MAAMC,OAAO,GAAGJ,OAAO,CAACI,OAAR,IAAmB;AAAEC,WAAO,EAAE;AAAX,GAAnC;AAEAC,QAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCL,QAAlC,EAA4CE,OAA5C;AAEAL,IAAE,CAACS,SAAH,GAAeC,MAAM,CAACV,EAAE,CAACS,SAAJ,CAArB;AACAT,IAAE,CAACS,SAAH,CAAcP,KAAK,CAACS,OAAN,CAAeC,IAA7B,IAAqC;AACnCT,YADmC,EACnCA,QADmC;AAEnCE;AAFmC,GAArC;;AAKA,MAAI,CAACJ,OAAO,CAACY,SAAT,IAAsB,CAACZ,OAAO,CAACY,SAAR,CAAkBC,KAA7C,EAAoD;AAClDX,YAAQ;AACT;AACF;;AAED,SAASY,MAAT,CAAiBf,EAAjB,EAAkCC,OAAlC,EAAiEC,KAAjE,EAA6E;AAAA;;AAC3E,MAAI,mBAACF,EAAE,CAACS,SAAJ,aAACO,cAAed,KAAK,CAACS,OAAN,CAAeC,IAA9B,CAAD,CAAJ,EAA0C;AAE1C,8BAA8BZ,EAAE,CAACS,SAAH,CAAaP,KAAK,CAACS,OAAN,CAAeC,IAA5B,CAA9B;AAAA,MAAQT,QAAR,yBAAQA,QAAR;AAAA,MAAkBE,OAAlB,yBAAkBA,OAAlB;AAEAE,QAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCd,QAArC,EAA+CE,OAA/C;AAEA,SAAOL,EAAE,CAACS,SAAH,CAAaP,KAAK,CAACS,OAAN,CAAeC,IAA5B,CAAP;AACD;;AAED,OAAO,IAAMM,MAAM,GAAG;AACpBnB,UADoB,EACpBA,QADoB;AAEpBgB;AAFoB,CAAf;AAKP,eAAeG,MAAf","names":["inserted","el","binding","vnode","callback","value","options","passive","window","addEventListener","_onResize","Object","context","_uid","modifiers","quiet","unbind","_el$_onResize","removeEventListener","Resize"],"sourceRoot":"","sources":["../../../src/directives/resize/index.ts"],"sourcesContent":["import { VNodeDirective } from 'vue/types/vnode'\nimport { VNode } from 'vue'\n\ninterface ResizeVNodeDirective extends VNodeDirective {\n  value?: () => void\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: HTMLElement, binding: ResizeVNodeDirective, vnode: VNode) {\n  const callback = binding.value!\n  const options = binding.options || { passive: true }\n\n  window.addEventListener('resize', callback, options)\n\n  el._onResize = Object(el._onResize)\n  el._onResize![vnode.context!._uid] = {\n    callback,\n    options,\n  }\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback()\n  }\n}\n\nfunction unbind (el: HTMLElement, binding: ResizeVNodeDirective, vnode: VNode) {\n  if (!el._onResize?.[vnode.context!._uid]) return\n\n  const { callback, options } = el._onResize[vnode.context!._uid]!\n\n  window.removeEventListener('resize', callback, options)\n\n  delete el._onResize[vnode.context!._uid]\n}\n\nexport const Resize = {\n  inserted,\n  unbind,\n}\n\nexport default Resize\n"]},"metadata":{},"sourceType":"module"}