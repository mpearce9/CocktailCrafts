{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport VIcon from '../../VIcon';\nimport VSimpleCheckbox from '../../VCheckbox/VSimpleCheckbox';\nimport ripple from '../../../directives/ripple';\nimport mixins from '../../../util/mixins';\nexport default mixins().extend({\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple: ripple\n  },\n  props: {\n    headers: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    options: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          page: 1,\n          itemsPerPage: 10,\n          sortBy: [],\n          sortDesc: [],\n          groupBy: [],\n          groupDesc: [],\n          multiSort: false,\n          mustSort: false\n        };\n      }\n    },\n    checkboxColor: String,\n    sortIcon: {\n      type: String,\n      \"default\": '$sort'\n    },\n    everyItem: Boolean,\n    someItems: Boolean,\n    showGroupBy: Boolean,\n    singleSelect: Boolean,\n    disableSort: Boolean\n  },\n  methods: {\n    genSelectAll: function genSelectAll() {\n      var _this = this;\n\n      var _this$checkboxColor;\n\n      var data = {\n        props: {\n          value: this.everyItem,\n          indeterminate: !this.everyItem && this.someItems,\n          color: (_this$checkboxColor = this.checkboxColor) != null ? _this$checkboxColor : ''\n        },\n        on: {\n          input: function input(v) {\n            return _this.$emit('toggle-select-all', v);\n          }\n        }\n      };\n\n      if (this.$scopedSlots['data-table-select']) {\n        return this.$scopedSlots['data-table-select'](data);\n      }\n\n      return this.$createElement(VSimpleCheckbox, _objectSpread({\n        staticClass: 'v-data-table__checkbox'\n      }, data));\n    },\n    genSortIcon: function genSortIcon() {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-data-table-header__icon',\n        props: {\n          size: 18\n        }\n      }, [this.sortIcon]);\n    }\n  }\n});","map":{"version":3,"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAIA,OAAOC,MAAP,MAAmB,sBAAnB;AASA,eAAeA,MAAM,GAAYC,MAAlB,CAAyB;AACtC;AACAC,YAAU,EAAE;AACVH;AADU,GAF0B;AAMtCI,OAAK,EAAE;AACLC,WAAO,EAAE;AACPC,UAAI,EAAEC,KADC;AAEP,iBAAS;AAAA,eAAO,EAAP;AAAA;AAFF,KADJ;AAKLC,WAAO,EAAE;AACPF,UAAI,EAAEG,MADC;AAEP,iBAAS;AAAA,eAAO;AACdC,cAAI,EAAE,CADQ;AAEdC,sBAAY,EAAE,EAFA;AAGdC,gBAAM,EAAE,EAHM;AAIdC,kBAAQ,EAAE,EAJI;AAKdC,iBAAO,EAAE,EALK;AAMdC,mBAAS,EAAE,EANG;AAOdC,mBAAS,EAAE,KAPG;AAQdC,kBAAQ,EAAE;AARI,SAAP;AAAA;AAFF,KALJ;AAkBLC,iBAAa,EAAEC,MAlBV;AAmBLC,YAAQ,EAAE;AACRd,UAAI,EAAEa,MADE;AAER,iBAAS;AAFD,KAnBL;AAuBLE,aAAS,EAAEC,OAvBN;AAwBLC,aAAS,EAAED,OAxBN;AAyBLE,eAAW,EAAEF,OAzBR;AA0BLG,gBAAY,EAAEH,OA1BT;AA2BLI,eAAW,EAAEJ;AA3BR,GAN+B;AAoCtCK,SAAO,EAAE;AACPC,gBADO,0BACK;AAAA;;AAAA;;AACV,UAAMC,IAAI,GAAG;AACXzB,aAAK,EAAE;AACL0B,eAAK,EAAE,KAAKT,SADP;AAELU,uBAAa,EAAE,CAAC,KAAKV,SAAN,IAAmB,KAAKE,SAFlC;AAGLS,eAAK,yBAAE,KAAKd,aAAP,kCAAwB;AAHxB,SADI;AAMXe,UAAE,EAAE;AACFC,eAAK,EAAG,gBAAD;AAAA,mBAAgB,MAAKC,KAAL,CAAW,mBAAX,EAAgCC,CAAhC,CAAhB;AAAA;AADL;AANO,OAAb;;AAWA,UAAI,KAAKC,YAAL,CAAkB,mBAAlB,CAAJ,EAA4C;AAC1C,eAAO,KAAKA,YAAL,CAAkB,mBAAlB,EAAwCR,IAAxC,CAAP;AACD;;AAED,aAAO,KAAKS,cAAL,CAAoBvC,eAApB;AACLwC,mBAAW,EAAE;AADR,SAEFV,IAFE,EAAP;AAjBK;AAsBPW,eAtBO,yBAsBI;AACT,aAAO,KAAKF,cAAL,CAAoBxC,KAApB,EAA2B;AAChCyC,mBAAW,EAAE,2BADmB;AAEhCnC,aAAK,EAAE;AACLqC,cAAI,EAAE;AADD;AAFyB,OAA3B,EAKJ,CAAC,KAAKrB,QAAN,CALI,CAAP;AAMD;AA7BM;AApC6B,CAAzB,CAAf","names":["VIcon","VSimpleCheckbox","ripple","mixins","extend","directives","props","headers","type","Array","options","Object","page","itemsPerPage","sortBy","sortDesc","groupBy","groupDesc","multiSort","mustSort","checkboxColor","String","sortIcon","everyItem","Boolean","someItems","showGroupBy","singleSelect","disableSort","methods","genSelectAll","data","value","indeterminate","color","on","input","$emit","v","$scopedSlots","$createElement","staticClass","genSortIcon","size"],"sourceRoot":"","sources":["../../../../src/components/VDataTable/mixins/header.ts"],"sourcesContent":["import { VDataTable } from '../'\nimport VIcon from '../../VIcon'\nimport VSimpleCheckbox from '../../VCheckbox/VSimpleCheckbox'\nimport ripple from '../../../directives/ripple'\n\nimport Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport mixins from '../../../util/mixins'\nimport { DataOptions, DataTableHeader } from 'vuetify/types'\n\ntype VDataTableInstance = InstanceType<typeof VDataTable>\n\ninterface options extends Vue {\n  dataTable: VDataTableInstance\n}\n\nexport default mixins<options>().extend({\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    headers: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<DataTableHeader[]>,\n    options: {\n      type: Object,\n      default: () => ({\n        page: 1,\n        itemsPerPage: 10,\n        sortBy: [],\n        sortDesc: [],\n        groupBy: [],\n        groupDesc: [],\n        multiSort: false,\n        mustSort: false,\n      }),\n    } as PropValidator<DataOptions>,\n    checkboxColor: String,\n    sortIcon: {\n      type: String,\n      default: '$sort',\n    },\n    everyItem: Boolean,\n    someItems: Boolean,\n    showGroupBy: Boolean,\n    singleSelect: Boolean,\n    disableSort: Boolean,\n  },\n\n  methods: {\n    genSelectAll () {\n      const data = {\n        props: {\n          value: this.everyItem,\n          indeterminate: !this.everyItem && this.someItems,\n          color: this.checkboxColor ?? '',\n        },\n        on: {\n          input: (v: boolean) => this.$emit('toggle-select-all', v),\n        },\n      }\n\n      if (this.$scopedSlots['data-table-select']) {\n        return this.$scopedSlots['data-table-select']!(data)\n      }\n\n      return this.$createElement(VSimpleCheckbox, {\n        staticClass: 'v-data-table__checkbox',\n        ...data,\n      })\n    },\n    genSortIcon () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-data-table-header__icon',\n        props: {\n          size: 18,\n        },\n      }, [this.sortIcon])\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}