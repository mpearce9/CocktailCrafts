{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Styles\nimport \"../../../src/components/VDataTable/VDataTableHeader.sass\"; // Components\n\nimport VDataTableHeaderMobile from './VDataTableHeaderMobile';\nimport VDataTableHeaderDesktop from './VDataTableHeaderDesktop'; // Mixins\n\nimport header from './mixins/header'; // Utilities\n\nimport dedupeModelListeners from '../../util/dedupeModelListeners';\nimport mergeData from '../../util/mergeData';\nimport rebuildSlots from '../../util/rebuildFunctionalSlots'; // Types\n\nimport Vue from 'vue';\n/* @vue/component */\n\nexport default Vue.extend({\n  name: 'v-data-table-header',\n  functional: true,\n  props: _objectSpread(_objectSpread({}, header.options.props), {}, {\n    mobile: Boolean\n  }),\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        slots = _ref.slots;\n    dedupeModelListeners(data);\n    var children = rebuildSlots(slots(), h);\n    data = mergeData(data, {\n      props: props\n    });\n\n    if (props.mobile) {\n      return h(VDataTableHeaderMobile, data, children);\n    } else {\n      return h(VDataTableHeaderDesktop, data, children);\n    }\n  }\n});","map":{"version":3,"mappings":";;;;;;AAAA;AACA,OAAO,0DAAP,C,CAEA;;AACA,OAAOA,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,uBAAP,MAAoC,2BAApC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CAEA;;AACA,OAAOC,oBAAP,MAAiC,iCAAjC;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,YAAP,MAAyB,mCAAzB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,KAAhB;AAEA;;AACA,eAAeA,GAAG,CAACC,MAAJ,CAAW;AACxBC,MAAI,EAAE,qBADkB;AAGxBC,YAAU,EAAE,IAHY;AAKxBC,OAAK,kCACAR,MAAM,CAACS,OAAP,CAAeD,KADf;AAEHE,UAAM,EAAEC;AAFL,IALmB;AAUxBC,QAVwB,kBAUhBC,CAVgB,QAUS;AAAA,QAApBL,KAAoB,QAApBA,KAAoB;AAAA,QAAbM,IAAa,QAAbA,IAAa;AAAA,QAAPC,KAAO,QAAPA,KAAO;AAC/Bd,wBAAoB,CAACa,IAAD,CAApB;AACA,QAAME,QAAQ,GAAGb,YAAY,CAACY,KAAK,EAAN,EAAUF,CAAV,CAA7B;AAEAC,QAAI,GAAGZ,SAAS,CAACY,IAAD,EAAO;AAAEN;AAAF,KAAP,CAAhB;;AAEA,QAAIA,KAAK,CAACE,MAAV,EAAkB;AAChB,aAAOG,CAAC,CAACf,sBAAD,EAAyBgB,IAAzB,EAA+BE,QAA/B,CAAR;AADF,WAEO;AACL,aAAOH,CAAC,CAACd,uBAAD,EAA0Be,IAA1B,EAAgCE,QAAhC,CAAR;AACD;AACF;AArBuB,CAAX,CAAf","names":["VDataTableHeaderMobile","VDataTableHeaderDesktop","header","dedupeModelListeners","mergeData","rebuildSlots","Vue","extend","name","functional","props","options","mobile","Boolean","render","h","data","slots","children"],"sourceRoot":"","sources":["../../../src/components/VDataTable/VDataTableHeader.ts"],"sourcesContent":["// Styles\nimport './VDataTableHeader.sass'\n\n// Components\nimport VDataTableHeaderMobile from './VDataTableHeaderMobile'\nimport VDataTableHeaderDesktop from './VDataTableHeaderDesktop'\n\n// Mixins\nimport header from './mixins/header'\n\n// Utilities\nimport dedupeModelListeners from '../../util/dedupeModelListeners'\nimport mergeData from '../../util/mergeData'\nimport rebuildSlots from '../../util/rebuildFunctionalSlots'\n\n// Types\nimport Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'v-data-table-header',\n\n  functional: true,\n\n  props: {\n    ...header.options.props,\n    mobile: Boolean,\n  },\n\n  render (h, { props, data, slots }) {\n    dedupeModelListeners(data)\n    const children = rebuildSlots(slots(), h)\n\n    data = mergeData(data, { props })\n\n    if (props.mobile) {\n      return h(VDataTableHeaderMobile, data, children)\n    } else {\n      return h(VDataTableHeaderDesktop, data, children)\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}