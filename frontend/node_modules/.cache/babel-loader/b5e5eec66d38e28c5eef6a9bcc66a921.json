{"ast":null,"code":"import { keys } from '../../util/helpers';\n\nvar handleGesture = function handleGesture(wrapper) {\n  var touchstartX = wrapper.touchstartX,\n      touchendX = wrapper.touchendX,\n      touchstartY = wrapper.touchstartY,\n      touchendY = wrapper.touchendY;\n  var dirRatio = 0.5;\n  var minDistance = 16;\n  wrapper.offsetX = touchendX - touchstartX;\n  wrapper.offsetY = touchendY - touchstartY;\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && touchendX < touchstartX - minDistance && wrapper.left(wrapper);\n    wrapper.right && touchendX > touchstartX + minDistance && wrapper.right(wrapper);\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && touchendY < touchstartY - minDistance && wrapper.up(wrapper);\n    wrapper.down && touchendY > touchstartY + minDistance && wrapper.down(wrapper);\n  }\n};\n\nfunction _touchstart(event, wrapper) {\n  var touch = event.changedTouches[0];\n  wrapper.touchstartX = touch.clientX;\n  wrapper.touchstartY = touch.clientY;\n  wrapper.start && wrapper.start(Object.assign(event, wrapper));\n}\n\nfunction _touchend(event, wrapper) {\n  var touch = event.changedTouches[0];\n  wrapper.touchendX = touch.clientX;\n  wrapper.touchendY = touch.clientY;\n  wrapper.end && wrapper.end(Object.assign(event, wrapper));\n  handleGesture(wrapper);\n}\n\nfunction _touchmove(event, wrapper) {\n  var touch = event.changedTouches[0];\n  wrapper.touchmoveX = touch.clientX;\n  wrapper.touchmoveY = touch.clientY;\n  wrapper.move && wrapper.move(Object.assign(event, wrapper));\n}\n\nfunction createHandlers(value) {\n  var wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end\n  };\n  return {\n    touchstart: function touchstart(e) {\n      return _touchstart(e, wrapper);\n    },\n    touchend: function touchend(e) {\n      return _touchend(e, wrapper);\n    },\n    touchmove: function touchmove(e) {\n      return _touchmove(e, wrapper);\n    }\n  };\n}\n\nfunction inserted(el, binding, vnode) {\n  var value = binding.value;\n  var target = value.parent ? el.parentElement : el;\n  var options = value.options || {\n    passive: true\n  }; // Needed to pass unit tests\n\n  if (!target) return;\n  var handlers = createHandlers(binding.value);\n  target._touchHandlers = Object(target._touchHandlers);\n  target._touchHandlers[vnode.context._uid] = handlers;\n  keys(handlers).forEach(function (eventName) {\n    target.addEventListener(eventName, handlers[eventName], options);\n  });\n}\n\nfunction unbind(el, binding, vnode) {\n  var target = binding.value.parent ? el.parentElement : el;\n  if (!target || !target._touchHandlers) return;\n  var handlers = target._touchHandlers[vnode.context._uid];\n  keys(handlers).forEach(function (eventName) {\n    target.removeEventListener(eventName, handlers[eventName]);\n  });\n  delete target._touchHandlers[vnode.context._uid];\n}\n\nexport var Touch = {\n  inserted: inserted,\n  unbind: unbind\n};\nexport default Touch;","map":{"version":3,"mappings":"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","names":["keys","handleGesture","touchstartX","wrapper","touchendX","touchstartY","touchendY","dirRatio","minDistance","offsetX","offsetY","Math","abs","left","right","up","down","touchstart","event","touch","changedTouches","clientX","clientY","start","Object","assign","touchend","end","touchmove","touchmoveX","touchmoveY","move","createHandlers","value","e","inserted","el","binding","vnode","target","parent","parentElement","options","passive","handlers","_touchHandlers","context","_uid","forEach","addEventListener","eventName","unbind","removeEventListener","Touch"],"sourceRoot":"","sources":["../../../src/directives/touch/index.ts"],"sourcesContent":["import { VNodeDirective, VNode } from 'vue/types/vnode'\nimport { keys } from '../../util/helpers'\nimport { TouchHandlers, TouchValue, TouchWrapper } from 'vuetify/types'\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchVNodeDirective extends VNodeDirective {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start &&\n    wrapper.start(Object.assign(event, wrapper))\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end &&\n    wrapper.end(Object.assign(event, wrapper))\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper))\n}\n\nfunction createHandlers (value: TouchHandlers): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const value = binding.value!\n  const target = value.parent ? el.parentElement : el\n  const options = value.options || { passive: true }\n\n  // Needed to pass unit tests\n  if (!target) return\n\n  const handlers = createHandlers(binding.value!)\n  target._touchHandlers = Object(target._touchHandlers)\n  target._touchHandlers![vnode.context!._uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName] as EventListener, options)\n  })\n}\n\nfunction unbind (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const target = binding.value!.parent ? el.parentElement : el\n  if (!target || !target._touchHandlers) return\n\n  const handlers = target._touchHandlers[vnode.context!._uid]\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n  delete target._touchHandlers[vnode.context!._uid]\n}\n\nexport const Touch = {\n  inserted,\n  unbind,\n}\n\nexport default Touch\n"]},"metadata":{},"sourceType":"module"}