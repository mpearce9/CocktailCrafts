{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../../../src/components/VCheckbox/VSimpleCheckbox.sass\";\nimport ripple from '../../directives/ripple';\nimport Vue from 'vue';\nimport { VIcon } from '../VIcon'; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport Themeable from '../../mixins/themeable'; // Utilities\n\nimport mergeData from '../../util/mergeData';\nimport { wrapInArray } from '../../util/helpers';\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n  functional: true,\n  directives: {\n    ripple: ripple\n  },\n  props: _objectSpread(_objectSpread(_objectSpread({}, Colorable.options.props), Themeable.options.props), {}, {\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      \"default\": true\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      \"default\": '$checkboxIndeterminate'\n    },\n    onIcon: {\n      type: String,\n      \"default\": '$checkboxOn'\n    },\n    offIcon: {\n      type: String,\n      \"default\": '$checkboxOff'\n    }\n  }),\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        listeners = _ref.listeners;\n    var children = [];\n    var icon = props.offIcon;\n    if (props.indeterminate) icon = props.indeterminateIcon;else if (props.value) icon = props.onIcon;\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light\n      }\n    }), icon));\n\n    if (props.ripple && !props.disabled) {\n      var _ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: {\n            center: true\n          }\n        }]\n      }));\n\n      children.push(_ripple);\n    }\n\n    return h('div', mergeData(data, {\n      \"class\": {\n        'v-simple-checkbox': true,\n        'v-simple-checkbox--disabled': props.disabled\n      },\n      on: {\n        click: function click(e) {\n          e.stopPropagation();\n\n          if (data.on && data.on.input && !props.disabled) {\n            wrapInArray(data.on.input).forEach(function (f) {\n              return f(!props.value);\n            });\n          }\n        }\n      }\n    }), [h('div', {\n      staticClass: 'v-input--selection-controls__input'\n    }, children)]);\n  }\n});","map":{"version":3,"mappings":"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","names":["ripple","Vue","VIcon","Colorable","Themeable","mergeData","wrapInArray","extend","name","functional","directives","props","options","disabled","Boolean","type","value","indeterminate","indeterminateIcon","String","onIcon","offIcon","render","h","data","listeners","children","icon","push","methods","setTextColor","color","dark","light","staticClass","center","on","click","e","stopPropagation","input","forEach","f"],"sourceRoot":"","sources":["../../../src/components/VCheckbox/VSimpleCheckbox.ts"],"sourcesContent":["import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: {\n          'v-simple-checkbox': true,\n          'v-simple-checkbox--disabled': props.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), [\n        h('div', { staticClass: 'v-input--selection-controls__input' }, children),\n      ])\n  },\n})\n"]},"metadata":{},"sourceType":"module"}